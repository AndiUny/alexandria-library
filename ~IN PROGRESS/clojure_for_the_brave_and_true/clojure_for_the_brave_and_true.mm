<map version="1.0.1">
<!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net -->
<node CREATED="1572957365929" ID="ID_1722198687" LINK="https://www.braveclojure.com/" MODIFIED="1573650707236" TEXT="Clojure For The Brave And True">
<node CREATED="1572957374905" FOLDED="true" ID="ID_1172720428" MODIFIED="1573402908198" POSITION="right" TEXT="Building, Running, and the REPL">
<icon BUILTIN="full-1"/>
<node CREATED="1572957483719" ID="ID_528358401" MODIFIED="1572957484341" TEXT=" First Things First: What Is Clojure?">
<node CREATED="1572957491319" ID="ID_66642206" MODIFIED="1572957493708" TEXT="Created by Rich Hickey"/>
<node CREATED="1572957521054" ID="ID_1658435940" MODIFIED="1572957524899" TEXT="Clojure language">
<node CREATED="1572957525062" ID="ID_1171740525" MODIFIED="1572957527756" TEXT="LISP dialect"/>
</node>
<node CREATED="1572957535320" ID="ID_1936046949" MODIFIED="1572957538940" TEXT="Clojure compiler">
<node CREATED="1572957539198" ID="ID_1878239762" MODIFIED="1572957540859" TEXT="JAR file">
<node CREATED="1572957542567" ID="ID_622626920" MODIFIED="1572957544931" TEXT="clojure.jar"/>
</node>
<node CREATED="1572957548157" ID="ID_1615037980" MODIFIED="1572957555874" TEXT="Compile to Java Virtual Machine bytecode">
<node CREATED="1572957556045" ID="ID_1888099315" MODIFIED="1572957557074" TEXT="JVM"/>
</node>
</node>
<node CREATED="1572957574606" ID="ID_1359217977" MODIFIED="1572957579418" TEXT="Hosted language">
<node CREATED="1572957579694" ID="ID_375563752" MODIFIED="1572957597290" TEXT="Rely on JVM for core features">
<node CREATED="1572957597494" ID="ID_1083637411" MODIFIED="1572957598586" TEXT="Examples">
<node CREATED="1572957598951" ID="ID_1712956645" MODIFIED="1572957600570" TEXT="Threading"/>
<node CREATED="1572957600919" ID="ID_711783437" MODIFIED="1572957606794" TEXT="Garbage collection"/>
</node>
</node>
</node>
<node CREATED="1572957624733" ID="ID_1747438815" MODIFIED="1572957652487" TEXT="Main concepts">
<node CREATED="1572957628350" ID="ID_455594851" MODIFIED="1572957628842" TEXT="JVM processes execute Java bytecode."/>
<node CREATED="1572957635005" ID="ID_1809569728" MODIFIED="1572957636132" TEXT="Usually, the Java Compiler produces Java bytecode from Java source code."/>
<node CREATED="1572957639251" ID="ID_709149232" MODIFIED="1572957639916" TEXT="JAR files are collections of Java bytecode."/>
<node CREATED="1572957643149" ID="ID_1989383999" MODIFIED="1572957643716" TEXT="Java programs are usually distributed as JAR files."/>
<node CREATED="1572957647453" ID="ID_1108870445" MODIFIED="1572957648045" TEXT="The Java program clojure.jar reads Clojure source code and produces Java bytecode."/>
<node CREATED="1572957652487" ID="ID_257005380" MODIFIED="1572957653125" TEXT="That Java bytecode is then executed by the same JVM process already running clojure.jar"/>
</node>
</node>
<node CREATED="1572957672093" ID="ID_1697274448" MODIFIED="1572957681465" TEXT="Leiningen">
<node CREATED="1572957689294" ID="ID_394213928" MODIFIED="1572957707746" TEXT="Build / manage Clojure project"/>
</node>
<node CREATED="1572958452807" ID="ID_1597743822" MODIFIED="1572958453464" TEXT="Creating a New Clojure Project">
<node CREATED="1572958469285" ID="ID_1927250038" MODIFIED="1572958517535" TEXT="lein new app clojure-noob">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1572958479695" ID="ID_347486416" MODIFIED="1572958481058" TEXT="Running the Clojure Project">
<node CREATED="1572958508254" ID="ID_706686388" MODIFIED="1572958513633" TEXT="lein run">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1572958461184" ID="ID_1759692589" MODIFIED="1572958461774" TEXT="Building the Clojure Project">
<node CREATED="1572958506119" ID="ID_102965923" MODIFIED="1572958514399" TEXT="lein uberjar">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
<node CREATED="1572958558717" ID="ID_1619408766" MODIFIED="1572958563065" TEXT="To run the standalone">
<node CREATED="1572958563245" ID="ID_814208374" MODIFIED="1572958566631" TEXT="java -jar target/uberjar/clojure-noob-0.1.0-SNAPSHOT-standalone.jar">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
</node>
<node CREATED="1572958783157" ID="ID_608584920" MODIFIED="1572958783797" TEXT="Using the REPL">
<node CREATED="1572958784245" ID="ID_1056542304" MODIFIED="1572958788200" TEXT="Tool to experiment with code"/>
<node CREATED="1572958796522" ID="ID_1109773280" MODIFIED="1572958800688" TEXT="Prompt where you can enter code">
<node CREATED="1572958806947" ID="ID_1004456560" MODIFIED="1572958845357" TEXT="Reads">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1572958809527" ID="ID_1441168542" MODIFIED="1572958813457" TEXT="your input"/>
</node>
<node CREATED="1572958816445" ID="ID_1442587207" MODIFIED="1572958844853" TEXT="Evaluates">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1572958821316" ID="ID_1162678887" MODIFIED="1572958822865" TEXT="your input"/>
</node>
<node CREATED="1572958825732" ID="ID_1057908817" MODIFIED="1572958844413" TEXT="Prints">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1572958830707" ID="ID_288905772" MODIFIED="1572958831991" TEXT="the result"/>
</node>
<node CREATED="1572958832684" ID="ID_1575671814" MODIFIED="1572958843582" TEXT="Loops">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1572958838067" ID="ID_1444469446" MODIFIED="1572958842392" TEXT="present the prompt again"/>
</node>
</node>
<node CREATED="1572959046744" ID="ID_49994871" MODIFIED="1572959052607" TEXT="Similar to Secure Shell (SSH)">
<node CREATED="1572959061634" ID="ID_138874223" MODIFIED="1572959071204" TEXT="Interact with a running Clojure process"/>
<node CREATED="1572959081272" ID="ID_1865397925" MODIFIED="1572959088374" TEXT="Can be attached to a live production app!"/>
</node>
</node>
<node CREATED="1572959431343" ID="ID_86983393" MODIFIED="1572959431985" TEXT="Clojure Editors">
<node CREATED="1572959432438" ID="ID_183956577" MODIFIED="1572959435460" TEXT="Emacs most used"/>
</node>
<node CREATED="1572959441303" ID="ID_583278255" MODIFIED="1572959441919" TEXT="Summary"/>
</node>
<node CREATED="1572959463383" ID="ID_1899940640" MODIFIED="1572959468423" POSITION="right" TEXT="How to Use Emacs, an Excellent Clojure Editor">
<icon BUILTIN="full-2"/>
</node>
<node CREATED="1572960953553" FOLDED="true" ID="ID_408168825" MODIFIED="1573402905235" POSITION="right" TEXT="Do Things: A Clojure Crash Course">
<icon BUILTIN="full-3"/>
<node CREATED="1572961016986" ID="ID_626921267" MODIFIED="1572961019190" TEXT="Syntax">
<node CREATED="1572961038827" ID="ID_238894836" MODIFIED="1572961040519" TEXT="Forms">
<node CREATED="1572961044483" ID="ID_1883050739" MODIFIED="1572961050789" TEXT="Two kinds of structure">
<node CREATED="1572961050992" ID="ID_19773153" MODIFIED="1572961079399" TEXT="Literal representations of data structures">
<node CREATED="1572961062674" ID="ID_1129774410" MODIFIED="1572961066015" TEXT="numbers"/>
<node CREATED="1572961066475" ID="ID_612766944" MODIFIED="1572961067663" TEXT="strings"/>
<node CREATED="1572961068027" ID="ID_144536493" MODIFIED="1572961068735" TEXT="maps"/>
<node CREATED="1572961069082" ID="ID_671502954" MODIFIED="1572961070447" TEXT="vectors"/>
</node>
<node CREATED="1572961071545" ID="ID_1650674271" MODIFIED="1572961073598" TEXT="Operations"/>
</node>
<node CREATED="1572961086848" ID="ID_1957886058" MODIFIED="1572961087662" TEXT="Form">
<node CREATED="1572961087842" ID="ID_1842820427" MODIFIED="1572961090870" TEXT="= valid code"/>
<node CREATED="1572961104985" ID="ID_1651145980" MODIFIED="1572961110033" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node CREATED="1572961111808" ID="ID_830805136" MODIFIED="1572961112402" TEXT="1"/>
<node CREATED="1572961113488" ID="ID_1292998990" MODIFIED="1572961116526" TEXT="&quot;a string&quot;"/>
<node CREATED="1572961116881" ID="ID_793184777" MODIFIED="1572961129542" TEXT="[&quot;a&quot; &quot;vector&quot; &quot;of&quot; &quot;string&quot;]"/>
</node>
</node>
<node CREATED="1572961140121" ID="ID_1694053521" MODIFIED="1572961144453" TEXT="Use literals in expressions"/>
<node CREATED="1572961160888" ID="ID_1723727415" MODIFIED="1572961163180" TEXT="Operations">
<node CREATED="1572961163329" ID="ID_1050564431" MODIFIED="1572961165573" TEXT="How you do things"/>
<node CREATED="1572961172864" ID="ID_968267198" MODIFIED="1572961176094" TEXT="All operations take the form">
<node CREATED="1572961147809" ID="ID_370379128" MODIFIED="1572961148441" TEXT="(operator operand1 operand2 ... operandn)"/>
<node CREATED="1572961345543" ID="ID_1123891234" MODIFIED="1572961356436" TEXT="No commas but whitespace as separators"/>
</node>
</node>
</node>
<node CREATED="1572961917756" ID="ID_311424717" MODIFIED="1572962710615" TEXT="Control Flow">
<node CREATED="1572962456376" ID="ID_1007743017" MODIFIED="1572962460851" TEXT="nil and false">
<node CREATED="1572962462351" ID="ID_1957187277" MODIFIED="1572962466418" TEXT="logical falsiness"/>
</node>
<node CREATED="1572962469341" ID="ID_600676872" MODIFIED="1572962471355" TEXT="... everything else">
<node CREATED="1572962471558" ID="ID_1753693483" MODIFIED="1572962472290" TEXT="true"/>
</node>
<node CREATED="1572962710615" ID="ID_31268802" MODIFIED="1572962713257" TEXT="or">
<node CREATED="1572962713533" ID="ID_969921251" MODIFIED="1572962717640" TEXT="first truthy value"/>
<node CREATED="1572962717955" ID="ID_1074041914" MODIFIED="1572962720210" TEXT="... or last value"/>
</node>
<node CREATED="1572962723771" ID="ID_1247205344" MODIFIED="1572962724656" TEXT="and">
<node CREATED="1572962724893" ID="ID_419083620" MODIFIED="1572962731474" TEXT="return the first falsey value"/>
<node CREATED="1572962732933" ID="ID_173035673" MODIFIED="1573053405188" TEXT="... or last value"/>
</node>
</node>
<node CREATED="1573053386411" ID="ID_158159178" MODIFIED="1573053387106" TEXT="Naming Values with def">
<node CREATED="1573053440834" ID="ID_325347231" MODIFIED="1573053446133" TEXT="bind name to value">
<node CREATED="1573053585340" ID="ID_419744317" MODIFIED="1573053602035" TEXT="not assigning value to variable"/>
</node>
<node CREATED="1573054025836" ID="ID_1017158709" MODIFIED="1573054031976" TEXT="need to treat it">
<node CREATED="1573054032156" ID="ID_1526829669" MODIFIED="1573054038360" TEXT="as it defines constants"/>
</node>
</node>
</node>
<node CREATED="1573054225840" ID="ID_215717824" MODIFIED="1573054228804" TEXT="Data Structures">
<node CREATED="1573054260600" ID="ID_1793944047" MODIFIED="1573054263205" TEXT="All immutables"/>
<node CREATED="1573054281745" ID="ID_418622693" MODIFIED="1573054282484" TEXT="Numbers">
<node CREATED="1573054355223" ID="ID_1511952120" MODIFIED="1573054357758" TEXT="Integers"/>
<node CREATED="1573054358169" ID="ID_347445480" MODIFIED="1573054360061" TEXT="Float"/>
<node CREATED="1573054360504" ID="ID_424743807" MODIFIED="1573054362069" TEXT="Ratios"/>
</node>
<node CREATED="1573054400415" ID="ID_994427616" MODIFIED="1573054401660" TEXT="Strings">
<node CREATED="1573054668334" ID="ID_617159641" MODIFIED="1573054676209" TEXT="only way of concatenate">
<node CREATED="1573054676382" ID="ID_367043870" MODIFIED="1573054683464" TEXT="function &quot;str&quot;"/>
</node>
</node>
<node CREATED="1573054727094" ID="ID_1715199146" MODIFIED="1573054913086" TEXT="Maps">
<node CREATED="1573054728565" ID="ID_1828200534" MODIFIED="1573054736738" TEXT="called in other languages">
<node CREATED="1573054736916" ID="ID_1291108953" MODIFIED="1573054739402" TEXT="Dictionnary"/>
<node CREATED="1573054739813" ID="ID_809737450" MODIFIED="1573054741153" TEXT="Hash"/>
</node>
<node CREATED="1573054741771" ID="ID_964967185" MODIFIED="1573054743521" TEXT="Two type">
<node CREATED="1573054743796" ID="ID_319446703" MODIFIED="1573054754241" TEXT="Hash maps"/>
<node CREATED="1573054745301" ID="ID_459313700" MODIFIED="1573054758153" TEXT="Sorted maps"/>
</node>
<node CREATED="1573054913667" ID="ID_1274189702" MODIFIED="1573054922079" TEXT="Map values can be any types">
<node CREATED="1573054922307" ID="ID_1192263658" MODIFIED="1573054923351" TEXT="string"/>
<node CREATED="1573054923652" ID="ID_1075090033" MODIFIED="1573054924552" TEXT="number"/>
<node CREATED="1573054924962" ID="ID_659918642" MODIFIED="1573054928184" TEXT="functions"/>
<node CREATED="1573054928539" ID="ID_1350316520" MODIFIED="1573054929064" TEXT="..."/>
</node>
<node CREATED="1573055047322" ID="ID_487222928" MODIFIED="1573055051624" TEXT="functions">
<node CREATED="1573055051794" ID="ID_614556501" MODIFIED="1573055058119" TEXT="hash-map">
<node CREATED="1573055058347" ID="ID_962599535" MODIFIED="1573055064494" TEXT="other way to create hash map"/>
</node>
<node CREATED="1573055065090" ID="ID_1435260038" MODIFIED="1573055067149" TEXT="get">
<node CREATED="1573055067395" ID="ID_27634193" MODIFIED="1573055193397" TEXT="get a value in map"/>
</node>
<node CREATED="1573055182306" ID="ID_1196841102" MODIFIED="1573055186342" TEXT="get-in">
<node CREATED="1573055186610" ID="ID_790314512" MODIFIED="1573055192037" TEXT="get a value in nested map"/>
</node>
</node>
</node>
<node CREATED="1573055283273" ID="ID_194410003" MODIFIED="1573055283932" TEXT="Keywords">
<node CREATED="1573055298537" ID="ID_940386005" MODIFIED="1573055303518" TEXT="Primarly used as key in maps"/>
<node CREATED="1573055303953" ID="ID_1162140096" MODIFIED="1573055324749" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node CREATED="1573055305353" ID="ID_1110243720" MODIFIED="1573055306413" TEXT=":a"/>
<node CREATED="1573055306825" ID="ID_50022581" MODIFIED="1573055308893" TEXT=":hello"/>
<node CREATED="1573055309336" ID="ID_9626848" MODIFIED="1573055310956" TEXT=":_?"/>
<node CREATED="1573055317409" ID="ID_1806647959" MODIFIED="1573055319803" TEXT=":42"/>
</node>
</node>
<node CREATED="1573055515039" ID="ID_1039034428" MODIFIED="1573055516652" TEXT="Vectors">
<node CREATED="1573055527222" ID="ID_68421408" MODIFIED="1573055531219" TEXT="Similar to an array">
<node CREATED="1573055531389" ID="ID_1628591255" MODIFIED="1573055533996" TEXT="Indexed from 0"/>
</node>
<node CREATED="1573055655940" ID="ID_484865707" MODIFIED="1573055660273" TEXT="Can be of any types">
<node CREATED="1573055660438" ID="ID_1257470320" MODIFIED="1573055662866" TEXT="types can be mixed"/>
</node>
<node CREATED="1573056082211" ID="ID_16438614" MODIFIED="1573056084525" TEXT="Functions">
<node CREATED="1573056088242" ID="ID_1977920643" MODIFIED="1573056090127" TEXT="vector"/>
<node CREATED="1573056084713" ID="ID_266480929" MODIFIED="1573056086198" TEXT="get"/>
<node CREATED="1573056086626" ID="ID_149374931" MODIFIED="1573056087839" TEXT="get-in"/>
<node CREATED="1573056127298" ID="ID_558805663" MODIFIED="1573056128711" TEXT="conj">
<node CREATED="1573056128977" ID="ID_1385976016" MODIFIED="1573056135423" TEXT="add element at the end of the vector"/>
</node>
</node>
</node>
<node CREATED="1573056173280" ID="ID_1566684325" MODIFIED="1573056174614" TEXT="Lists">
<node CREATED="1573056187785" ID="ID_603501214" MODIFIED="1573056191541" TEXT="Similar to Vector">
<node CREATED="1573056191722" ID="ID_879746831" MODIFIED="1573056194118" TEXT="collection of values"/>
</node>
<node CREATED="1573056194674" ID="ID_1090686986" MODIFIED="1573056197044" TEXT="But differences">
<node CREATED="1573056197280" ID="ID_920917832" MODIFIED="1573056202102" TEXT="Can&apos;t use function &quot;get&quot;"/>
</node>
<node CREATED="1573056396210" ID="ID_1881259673" MODIFIED="1573056401721" TEXT="Can have any types">
<node CREATED="1573056401721" ID="ID_780221725" MODIFIED="1573056404060" TEXT="and mixed types"/>
</node>
<node CREATED="1573056309416" ID="ID_925474655" MODIFIED="1573056311293" TEXT="functions">
<node CREATED="1573056376039" ID="ID_539746813" MODIFIED="1573056377291" TEXT="list"/>
<node CREATED="1573056311496" ID="ID_1813484021" MODIFIED="1573056312236" TEXT="nth">
<node CREATED="1573056312416" ID="ID_976310551" MODIFIED="1573056317461" TEXT="retrieve nth element from a list"/>
<node CREATED="1573056317776" ID="ID_109879628" MODIFIED="1573056326973" TEXT="slower than &quot;get&quot; on a Vector!">
<node CREATED="1573056354895" ID="ID_1556314741" MODIFIED="1573056359324" TEXT="Traverse all nth elements"/>
</node>
</node>
<node CREATED="1573130912496" ID="ID_1905367591" MODIFIED="1573130914211" TEXT="conj">
<node CREATED="1573130914839" ID="ID_1542621316" MODIFIED="1573130921580" TEXT="element added at beginning of a list"/>
</node>
</node>
<node CREATED="1573130946357" ID="ID_1680607703" MODIFIED="1573130951083" TEXT="When to use list / vector?">
<node CREATED="1573130951303" ID="ID_780536533" MODIFIED="1573130952915" TEXT="List">
<node CREATED="1573130953095" ID="ID_1606232521" MODIFIED="1573130960218" TEXT="Add something easily at the beginning"/>
<node CREATED="1573130960527" ID="ID_1934180058" MODIFIED="1573130962683" TEXT="Writing macro"/>
</node>
<node CREATED="1573130969958" ID="ID_1563171236" MODIFIED="1573130971305" TEXT="Vector">
<node CREATED="1573130971501" ID="ID_743850103" MODIFIED="1573130977874" TEXT="Everything else"/>
</node>
</node>
</node>
<node CREATED="1573130992190" ID="ID_1469410182" MODIFIED="1573130993851" TEXT="Sets">
<node CREATED="1573130994055" ID="ID_1841955409" MODIFIED="1573131000354" TEXT="Collection of unique value"/>
<node CREATED="1573131008045" ID="ID_1615256136" MODIFIED="1573131009875" TEXT="Two kinds">
<node CREATED="1573131010053" ID="ID_1643956467" MODIFIED="1573131012043" TEXT="Hash sets"/>
<node CREATED="1573131012414" ID="ID_1355416763" MODIFIED="1573131014794" TEXT="Sorted sets"/>
</node>
<node CREATED="1573131137205" ID="ID_965884329" MODIFIED="1573131139137" TEXT="Functions">
<node CREATED="1573131139301" ID="ID_167340766" MODIFIED="1573131159698" TEXT="hash-set">
<node CREATED="1573131140341" ID="ID_665450130" MODIFIED="1573131163218" TEXT="Create a hash set"/>
</node>
<node CREATED="1573131164252" ID="ID_1667122953" MODIFIED="1573131165920" TEXT="set">
<node CREATED="1573131166117" ID="ID_1416780856" MODIFIED="1573131177113" TEXT="Transform vector / list into hash set"/>
</node>
<node CREATED="1573131259444" ID="ID_649157168" MODIFIED="1573131261096" TEXT="contains?">
<node CREATED="1573131261339" ID="ID_793571580" MODIFIED="1573131265976" TEXT="Verify if the value is in the set"/>
</node>
<node CREATED="1573136614874" ID="ID_46539020" MODIFIED="1573136615774" TEXT="get">
<node CREATED="1573136615978" ID="ID_390850806" MODIFIED="1573136620246" TEXT="get a value in set"/>
</node>
</node>
</node>
<node CREATED="1573136609506" ID="ID_1166933847" MODIFIED="1573136777398" TEXT="Simplicity">
<richcontent TYPE="NOTE"><html>
  <head>
    
  </head>
  <body>
    It is better to have 100 functions operate on one data structure than 10 functions on 10 data structures.

    <p>
      &#8212;Alan Perlis
    </p>
  </body>
</html></richcontent>
<node CREATED="1573136751801" ID="ID_1889701270" MODIFIED="1573136759982" TEXT="Using built in data structure in Clojure is simpler">
<node CREATED="1573136760794" ID="ID_486393757" MODIFIED="1573136765326" TEXT="than creating millions of new ones"/>
</node>
</node>
</node>
<node CREATED="1573136803479" ID="ID_1711321593" MODIFIED="1573137703466" TEXT="Functions">
<node CREATED="1573136828441" ID="ID_1779778029" MODIFIED="1573136829455" TEXT=" Calling Functions">
<node CREATED="1573136915272" ID="ID_1854080357" MODIFIED="1573136917084" TEXT="Structure">
<node CREATED="1573136917296" ID="ID_761571222" MODIFIED="1573136918340" TEXT="opening parenthesis, operator, operands, closing parenthesis"/>
</node>
</node>
<node CREATED="1573137293644" ID="ID_284257955" MODIFIED="1573137297866" TEXT="Higher order functions">
<node CREATED="1573137298059" ID="ID_608918986" MODIFIED="1573137307913" TEXT="Functions that can call an argument as function"/>
<node CREATED="1573137308437" ID="ID_457361985" MODIFIED="1573137312296" TEXT="... or return a function"/>
</node>
<node CREATED="1573137325829" ID="ID_912316093" MODIFIED="1573137336089" TEXT="Language with higher order function">
<node CREATED="1573137336285" ID="ID_1961891046" MODIFIED="1573137340977" TEXT="support first class function">
<node CREATED="1573137351868" ID="ID_538587814" MODIFIED="1573137567128" TEXT="means can treat function as value"/>
<node CREATED="1573137451268" ID="ID_937195634" MODIFIED="1573137571960" TEXT="allow you to create more abstraction">
<node CREATED="1573137572211" ID="ID_30681708" MODIFIED="1573137574975" TEXT="like the function +">
<node CREATED="1573137575203" ID="ID_1147428142" MODIFIED="1573137579672" TEXT="abstract addition"/>
</node>
</node>
</node>
</node>
<node CREATED="1573137550404" ID="ID_1428048212" MODIFIED="1573137595879" TEXT="All arguments are evaluated recursively">
<node CREATED="1573137596064" ID="ID_1057611807" MODIFIED="1573137599775" TEXT="before passing them to the function"/>
</node>
<node CREATED="1573137704162" ID="ID_1977685467" MODIFIED="1573137704872" TEXT="Function Calls, Macro Calls, and Special Forms">
<node CREATED="1573137844391" ID="ID_1809876720" MODIFIED="1573137846133" TEXT="Special forms">
<node CREATED="1573137846336" ID="ID_612237032" MODIFIED="1573137848901" TEXT="Examples">
<node CREATED="1573137849079" ID="ID_894948307" MODIFIED="1573137849596" TEXT="if"/>
<node CREATED="1573137849967" ID="ID_1724468917" MODIFIED="1573137850659" TEXT="def"/>
</node>
<node CREATED="1573137851360" ID="ID_428712212" MODIFIED="1573137854941" TEXT="Unlike function calls">
<node CREATED="1573137855178" ID="ID_1703647790" MODIFIED="1573137917442" TEXT="They don&apos;t evaluate all of their operands">
<icon BUILTIN="full-1"/>
</node>
<node CREATED="1573137898799" ID="ID_795072642" MODIFIED="1573137919610" TEXT="You can&apos;t use them as argument of functions">
<icon BUILTIN="full-2"/>
</node>
</node>
<node CREATED="1573137932632" ID="ID_58204599" MODIFIED="1573137945052" TEXT="Include core functionality which can&apos;t be implemented by function"/>
</node>
<node CREATED="1573140125647" ID="ID_938213404" MODIFIED="1573140127787" TEXT="Macros">
<node CREATED="1573140128063" ID="ID_1095795526" MODIFIED="1573140138507" TEXT="evaluate operand differently from function calls"/>
<node CREATED="1573140142414" ID="ID_16967867" MODIFIED="1573140150098" TEXT="can&apos;t be passed as argument to function"/>
</node>
</node>
<node CREATED="1573140156940" ID="ID_160138369" MODIFIED="1573140160082" TEXT="Defining function">
<node CREATED="1573140160254" ID="ID_1510814561" MODIFIED="1573140162427" TEXT="defn"/>
<node CREATED="1573140408231" ID="ID_443925594" MODIFIED="1573140413672" TEXT="The docstring">
<node CREATED="1573140434852" ID="ID_678135166" MODIFIED="1573140437080" TEXT="Document code"/>
<node CREATED="1573140437453" ID="ID_1967093623" MODIFIED="1573140441729" TEXT="To see documentation in REPL">
<node CREATED="1573140442132" ID="ID_722591736" MODIFIED="1573140442712" TEXT="(doc map)"/>
</node>
<node CREATED="1573140451394" ID="ID_935331400" MODIFIED="1573140458783" TEXT="Can be used with tool generating documentation"/>
</node>
<node CREATED="1573140461239" ID="ID_832179638" MODIFIED="1573140467056" TEXT="Parameters and Arity">
<node CREATED="1573140475116" ID="ID_53787518" MODIFIED="1573140479048" TEXT="0 or more params">
<node CREATED="1573140504947" ID="ID_424963400" MODIFIED="1573140507831" TEXT="functions arity"/>
</node>
<node CREATED="1573140489612" ID="ID_1891797794" MODIFIED="1573140494576" TEXT="params can be of any type"/>
<node CREATED="1573140692802" ID="ID_149246573" MODIFIED="1573140693769" TEXT="arity overloading">
<node CREATED="1573140694490" ID="ID_955551861" MODIFIED="1573140702622" TEXT="Define function which run different body">
<node CREATED="1573140702794" ID="ID_1182512416" MODIFIED="1573140705414" TEXT="depending on arity"/>
</node>
</node>
<node CREATED="1573141456036" ID="ID_611306560" MODIFIED="1573141459456" TEXT="&amp;">
<node CREATED="1573141459812" ID="ID_1491809485" MODIFIED="1573141460501" TEXT="rest parameter"/>
<node CREATED="1573141461116" ID="ID_1717739022" MODIFIED="1573141479015" TEXT="variable-arity function"/>
<node CREATED="1573141482931" ID="ID_1766202377" MODIFIED="1573141491118" TEXT="Arguments traited as a list"/>
<node CREATED="1573141497003" ID="ID_1412789079" MODIFIED="1573141506991" TEXT="Always come last"/>
</node>
</node>
<node CREATED="1573141650338" ID="ID_1528457520" MODIFIED="1573141651045" TEXT="Destructuring">
<node CREATED="1573211301963" ID="ID_1792125130" MODIFIED="1573211311368" TEXT="Name elements of Vector / List directly from function parameters"/>
<node CREATED="1573211787727" ID="ID_1658839578" MODIFIED="1573211790410" TEXT="Works with">
<node CREATED="1573211790591" ID="ID_1655732429" MODIFIED="1573211791787" TEXT="Vector"/>
<node CREATED="1573211792117" ID="ID_1173616433" MODIFIED="1573211792851" TEXT="Maps">
<node CREATED="1573211793023" ID="ID_1266429112" MODIFIED="1573211798355" TEXT="Associate a key with a param"/>
</node>
<node CREATED="1573211988499" ID="ID_1860830754" MODIFIED="1573211993561" TEXT="Lists"/>
<node CREATED="1573211993956" ID="ID_709564912" MODIFIED="1573211994753" TEXT="Sets"/>
</node>
</node>
<node CREATED="1573212010085" ID="ID_710713788" MODIFIED="1573212011816" TEXT="Function Body">
<node CREATED="1573212033675" ID="ID_1920354406" MODIFIED="1573212038313" TEXT="Contains forms of any kind"/>
<node CREATED="1573212038668" ID="ID_298874789" MODIFIED="1573212045952" TEXT="Always return the last form evaluated"/>
</node>
<node CREATED="1573212203794" ID="ID_419895636" MODIFIED="1573212204408" TEXT="All Functions Are Created Equal">
<node CREATED="1573212239593" ID="ID_1930984951" MODIFIED="1573212247126" TEXT="Every function work exactly the same"/>
</node>
</node>
<node CREATED="1573212248114" ID="ID_569775504" MODIFIED="1573212251151" TEXT="Anonymous functions">
<node CREATED="1573212770831" ID="ID_725553783" MODIFIED="1573212772594" TEXT="fn">
<node CREATED="1573212772823" ID="ID_1143613179" MODIFIED="1573212777137" TEXT="If function is large"/>
</node>
<node CREATED="1573212777710" ID="ID_1738648598" MODIFIED="1573212781497" TEXT="#()">
<node CREATED="1573212781998" ID="ID_1739097357" MODIFIED="1573212785202" TEXT="If function is simple">
<node CREATED="1573212785373" ID="ID_385524237" MODIFIED="1573212789425" TEXT="otherwise difficult to read"/>
</node>
</node>
</node>
<node CREATED="1573212796493" ID="ID_1202509940" MODIFIED="1573212797183" TEXT="Returning Functions">
<node CREATED="1573212928700" ID="ID_1014023513" MODIFIED="1573212936129" TEXT="Returned functions are closures">
<node CREATED="1573212936364" ID="ID_1707215700" MODIFIED="1573212944544" TEXT="Can access all variables which was in scope"/>
<node CREATED="1573212944900" ID="ID_699549508" MODIFIED="1573212948242" TEXT="... when function created"/>
</node>
</node>
</node>
<node CREATED="1573213122242" ID="ID_613438985" MODIFIED="1573213122949" TEXT="Pulling It All Together">
<node CREATED="1573220211843" ID="ID_263816681" MODIFIED="1573220212967" TEXT="let">
<node CREATED="1573234069957" ID="ID_1597349734" MODIFIED="1573234076762" TEXT="Provide clarity by naming things"/>
<node CREATED="1573234077587" ID="ID_556153323" MODIFIED="1573234080264" TEXT="Create a new scope">
<node CREATED="1573234088788" ID="ID_492926244" MODIFIED="1573234096962" TEXT="Evaluate an expression only once and return result"/>
<node CREATED="1573234123818" ID="ID_1088672277" MODIFIED="1573234130200" TEXT="Useful when">
<node CREATED="1573234130389" ID="ID_1968301718" MODIFIED="1573234148920" TEXT="Expensive function call">
<node CREATED="1573234149090" ID="ID_1776282342" MODIFIED="1573234168163" TEXT="Example">
<icon BUILTIN="wizard"/>
<node CREATED="1573234150740" ID="ID_620885824" MODIFIED="1573234154753" TEXT="API call"/>
</node>
</node>
<node CREATED="1573234140508" ID="ID_951238799" MODIFIED="1573234160537" TEXT="Expression has side effects"/>
</node>
</node>
</node>
<node CREATED="1573234649040" ID="ID_234357628" MODIFIED="1573234650901" TEXT="into">
<node CREATED="1573234651104" ID="ID_1732023259" MODIFIED="1573234656691" TEXT="Add values into a vector"/>
</node>
<node CREATED="1573234658072" ID="ID_1288107134" MODIFIED="1573234660340" TEXT="loop">
<node CREATED="1573234661344" ID="ID_1516650340" MODIFIED="1573234665404" TEXT="Other way to do recursion"/>
</node>
<node CREATED="1573235819365" ID="ID_1801768193" MODIFIED="1573235823762" TEXT="Regular expressions">
<node CREATED="1573235938989" ID="ID_819839183" MODIFIED="1573235939628" TEXT="re-find">
<node CREATED="1573235940036" ID="ID_1853035972" MODIFIED="1573235947218" TEXT="Match if the string as a pattern">
<node CREATED="1573235947414" ID="ID_878705273" MODIFIED="1573235950498" TEXT="If yes return it"/>
<node CREATED="1573235950864" ID="ID_28156924" MODIFIED="1573235953970" TEXT="If not return nil"/>
</node>
</node>
</node>
<node CREATED="1573236992709" ID="ID_641686583" MODIFIED="1573236993476" TEXT="Better Symmetrizer with reduce">
<node CREATED="1573237000429" ID="ID_905039760" MODIFIED="1573237003426" TEXT="common pattern">
<node CREATED="1573237003696" ID="ID_871648859" MODIFIED="1573237005208" TEXT="process each element in a sequence and build a result">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1573237008797" ID="ID_1005115870" MODIFIED="1573237016810" TEXT="built in function for that">
<node CREATED="1573237012934" ID="ID_674635780" MODIFIED="1573237014713" TEXT="reduce">
<node CREATED="1573237155667" ID="ID_975055019" MODIFIED="1573237169217" TEXT="Apply the given function to first element of sequence"/>
<node CREATED="1573237170932" ID="ID_1480720605" MODIFIED="1573237184680" TEXT="Apply given function to result and next sequence elements"/>
</node>
<node CREATED="1573316693827" ID="ID_1679393725" MODIFIED="1573316698575" TEXT="Can get an initial value">
<node CREATED="1573316698738" ID="ID_1917461222" MODIFIED="1573316712102" TEXT="Apply given function to">
<node CREATED="1573316712298" ID="ID_1069763283" MODIFIED="1573316714670" TEXT="initial value"/>
<node CREATED="1573316715001" ID="ID_835395532" MODIFIED="1573316746813" TEXT="first element of a sequence"/>
</node>
<node CREATED="1573316747881" ID="ID_1286822078" MODIFIED="1573316754660" TEXT="... and not two first elements of sequence"/>
</node>
</node>
</node>
</node>
</node>
<node CREATED="1573402908959" FOLDED="true" ID="ID_440740042" LINK="https://www.braveclojure.com/core-functions-in-depth/" MODIFIED="1573841797894" POSITION="right" TEXT="Core Functions in Depth">
<icon BUILTIN="full-4"/>
<node CREATED="1573402917880" ID="ID_1989943166" MODIFIED="1573807505956" TEXT="Programming to Abstractions">
<node CREATED="1573402956580" FOLDED="true" ID="ID_559538020" MODIFIED="1573643792870" TEXT="functions">
<node CREATED="1573402960868" ID="ID_1529589519" MODIFIED="1573402962960" TEXT="map / reduce">
<node CREATED="1573403016580" ID="ID_1976960502" MODIFIED="1573403019948" TEXT="sequence abstraction">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1573402971381" ID="ID_1313155611" MODIFIED="1573403045401" TEXT="... can feed any sequence"/>
<node CREATED="1573403011716" ID="ID_1849879527" MODIFIED="1573403015417" TEXT="... with same function"/>
<node CREATED="1573403048397" ID="ID_1382958557" MODIFIED="1573403067000" TEXT="Data structure needs to respond to core sequence operations">
<node CREATED="1573403067258" ID="ID_441380584" MODIFIED="1573403069440" TEXT="first"/>
<node CREATED="1573403069813" ID="ID_1414623721" MODIFIED="1573403070408" TEXT="rest"/>
<node CREATED="1573403070708" ID="ID_754934846" MODIFIED="1573403073056" TEXT="cons"/>
<node CREATED="1573403558144" ID="ID_1782622663" MODIFIED="1573403560205" TEXT="we say">
<node CREATED="1573403560361" ID="ID_1741515818" MODIFIED="1573403566636" TEXT="implements the sequence abstraction"/>
</node>
</node>
<node CREATED="1573403080565" ID="ID_1901155482" MODIFIED="1573403087245" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node CREATED="1573403082427" ID="ID_803185899" MODIFIED="1573403083328" TEXT="map"/>
<node CREATED="1573403083684" ID="ID_444007878" MODIFIED="1573403084424" TEXT="hash"/>
</node>
</node>
<node CREATED="1573403160022" ID="ID_1794395673" MODIFIED="1573403162432" TEXT="abstractions">
<node CREATED="1573403162644" ID="ID_1285688446" MODIFIED="1573403169840" TEXT="named collections of operations"/>
</node>
<node CREATED="1573403245290" FOLDED="true" ID="ID_911008343" MODIFIED="1573650971475" TEXT="map">
<icon BUILTIN="licq"/>
<node CREATED="1573403417986" ID="ID_446852912" MODIFIED="1573403421316">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <img src="vizualizing_a_mapping.PNG" />
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1573403438489" FOLDED="true" ID="ID_1335108479" MODIFIED="1573486218961" TEXT="sequence">
<icon BUILTIN="licq"/>
<node CREATED="1573403486576" ID="ID_826567084" MODIFIED="1573403489232">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <img src="sequence.PNG" />
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1573486249258" FOLDED="true" ID="ID_1172361309" MODIFIED="1573749023622" TEXT="We say that sequence functions">
<node CREATED="1573486253551" ID="ID_412109282" MODIFIED="1573486262746" TEXT="take a sequence">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
<node CREATED="1573486263471" ID="ID_1684788309" MODIFIED="1573486271597" TEXT="take a seq">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1573486285247" ID="ID_347315805" MODIFIED="1573486312186" TEXT="seq functions">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
<node CREATED="1573486291800" ID="ID_876316604" MODIFIED="1573486312578" TEXT="seq libraries">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1573486304593" ID="ID_623613456" MODIFIED="1573486309660" TEXT="Do sequential operations"/>
</node>
<node CREATED="1573486334256" FOLDED="true" ID="ID_1580338443" MODIFIED="1573749025652" TEXT="Core sequence functions">
<node CREATED="1573486340688" ID="ID_1639480284" MODIFIED="1573486341620" TEXT="first"/>
<node CREATED="1573486341983" ID="ID_1967351305" MODIFIED="1573486342812" TEXT="rest"/>
<node CREATED="1573486343155" ID="ID_1478731666" MODIFIED="1573486343675" TEXT="cons"/>
<node CREATED="1573486362178" ID="ID_1280660129" MODIFIED="1573486369588" TEXT="... work on a data structure">
<node CREATED="1573486369816" ID="ID_809345111" MODIFIED="1573486374284" TEXT="you can say"/>
<node CREATED="1573486374639" ID="ID_612375071" MODIFIED="1573486385204" TEXT="... the data structure implement the sequence abstractions"/>
</node>
</node>
<node CREATED="1573486718772" FOLDED="true" ID="ID_1039064990" MODIFIED="1573749039812" TEXT="first, rest, and cons">
<font NAME="SansSerif" SIZE="12"/>
<node CREATED="1573486818837" ID="ID_1411885937" MODIFIED="1573486829236" TEXT="list">
<icon BUILTIN="licq"/>
<node CREATED="1573486820957" ID="ID_1449966272" MODIFIED="1573486824947">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <img src="list.PNG" />
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1573486856706" ID="ID_46392372" MODIFIED="1573486857993" TEXT="first">
<node CREATED="1573486858276" ID="ID_1971216637" MODIFIED="1573486867784" TEXT="return the value for the requested node"/>
</node>
<node CREATED="1573486868347" ID="ID_1333925974" MODIFIED="1573486870807" TEXT="rest">
<node CREATED="1573486871060" ID="ID_1067654231" MODIFIED="1573486881768" TEXT="returns the remaining values after the requested node"/>
</node>
<node CREATED="1573486882516" ID="ID_1076374692" MODIFIED="1573486883623" TEXT="cons">
<node CREATED="1573486885475" ID="ID_99195875" MODIFIED="1573486898016" TEXT="adds a new node with the given value to the beginning of the list"/>
<node CREATED="1573650977633" ID="ID_290514843" MODIFIED="1573650986758" TEXT="we say we">
<node CREATED="1573650987001" ID="ID_312336213" MODIFIED="1573650991114" TEXT="consing ">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
<node CREATED="1573650992344" ID="ID_1502265705" MODIFIED="1573650997989" TEXT="... when used cons function"/>
</node>
</node>
<node CREATED="1573486906740" ID="ID_965331253" MODIFIED="1573486912575" TEXT="... on top of them you can implement">
<node CREATED="1573486912795" ID="ID_166887998" MODIFIED="1573486914505" TEXT="map"/>
<node CREATED="1573486914875" ID="ID_575167075" MODIFIED="1573486916120" TEXT="reduce"/>
<node CREATED="1573486916443" ID="ID_541274516" MODIFIED="1573486917265" TEXT="filter"/>
<node CREATED="1573486919467" ID="ID_1223869106" MODIFIED="1573486923768" TEXT="other seq functions"/>
</node>
</node>
<node CREATED="1573487221106" FOLDED="true" ID="ID_1823526536" MODIFIED="1573749043206" TEXT="Abstraction Through Indirection">
<node CREATED="1573487286633" ID="ID_1749131232" MODIFIED="1573487295180" TEXT="How first works with different data structures?">
<node CREATED="1573487295415" ID="ID_705052041" MODIFIED="1573487299634" TEXT="Indirection">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1573487303601" ID="ID_282499710" MODIFIED="1573487313724" TEXT="mechanism a language employs"/>
<node CREATED="1573487314367" ID="ID_1249407453" MODIFIED="1573487329541" TEXT="... so that one name can have multiple,"/>
<node CREATED="1573487324719" ID="ID_1529659225" MODIFIED="1573487327621" TEXT="... related meaning"/>
<node CREATED="1573487333001" ID="ID_1827230928" MODIFIED="1573487334589" TEXT="first">
<node CREATED="1573487334776" ID="ID_919717801" MODIFIED="1573487346940" TEXT="multiple data structure-specific meaning"/>
</node>
</node>
<node CREATED="1573487364248" ID="ID_1141640862" MODIFIED="1573487370504" TEXT="polymorphism">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1573487370968" ID="ID_138737044" MODIFIED="1573487388868" TEXT="One way that Clojure provide indirection"/>
<node CREATED="1573487395584" ID="ID_1252781573" MODIFIED="1573487405852" TEXT="Dispatch to different function bodies"/>
<node CREATED="1573487406210" ID="ID_1300100253" MODIFIED="1573487413707" TEXT="... based on type of argument supplied">
<node CREATED="1573487413870" ID="ID_1459549393" MODIFIED="1573487420941" TEXT="Similar to multi-arities function"/>
<node CREATED="1573487421448" ID="ID_946785473" MODIFIED="1573487426133" TEXT="... dispatching bodies"/>
<node CREATED="1573487426520" ID="ID_257862867" MODIFIED="1573487431380" TEXT="... depending on the number of arguments"/>
</node>
<node CREATED="1573487444182" ID="ID_1066325784" MODIFIED="1573487457452" TEXT="Two constructs for polymorphic dispatch">
<node CREATED="1573487457896" ID="ID_227065702" MODIFIED="1573487465685" TEXT="host platform&apos;s interface construct"/>
<node CREATED="1573487466055" ID="ID_1665501015" MODIFIED="1573487477884" TEXT="platform-independent protocols"/>
</node>
</node>
<node CREATED="1573487540327" ID="ID_1421258581" MODIFIED="1573487553585" TEXT="Other indirection via lightweight type conversion">
<node CREATED="1573487721046" ID="ID_1330913018" MODIFIED="1573487723682" TEXT="function seq">
<node CREATED="1573487723981" ID="ID_1176357770" MODIFIED="1573488130256" TEXT="always returns a value looks and behave like a list">
<icon BUILTIN="full-1"/>
<node CREATED="1573487743956" ID="ID_1023987862" MODIFIED="1573487748730" TEXT="it&apos;s a sequence or seq"/>
</node>
<node CREATED="1573487740605" ID="ID_721437165" MODIFIED="1573488133001" TEXT="seq of map consist of two elements key-value vectors">
<icon BUILTIN="full-2"/>
</node>
<node CREATED="1573487775860" ID="ID_532215354" MODIFIED="1573487790818" TEXT="... that&apos;s why map treats your maps like vectors!"/>
<node CREATED="1573487967292" ID="ID_315253258" MODIFIED="1573487977400" TEXT="Clojure sequence function use seq functions">
<node CREATED="1573487977683" ID="ID_565299938" MODIFIED="1573487980704" TEXT="on its arguments"/>
</node>
</node>
</node>
</node>
<node CREATED="1573488003036" ID="ID_1636353221" MODIFIED="1573488005368" TEXT="Takeaway">
<node CREATED="1573488005604" ID="ID_1490864589" MODIFIED="1573488019006" TEXT="powerful to focus on what we can do on a data structure"/>
<node CREATED="1573488019812" ID="ID_701395293" MODIFIED="1573488029840" TEXT="... and to ignore, as much as possible, its implementation"/>
<node CREATED="1573488038082" ID="ID_1786847004" MODIFIED="1573488047280" TEXT="This is programming by abstraction"/>
</node>
</node>
</node>
<node CREATED="1573488107530" FOLDED="true" ID="ID_805099543" MODIFIED="1573749052406" TEXT="Seq function examples">
<node CREATED="1573488120419" ID="ID_1414596707" MODIFIED="1573488121694" TEXT="map">
<node CREATED="1573488244850" ID="ID_1586810215" MODIFIED="1573488251527" TEXT="When using multiple collections">
<node CREATED="1573488251697" ID="ID_506931324" MODIFIED="1573488264349" TEXT="make sure that the number of function arguments"/>
<node CREATED="1573488264675" ID="ID_308648741" MODIFIED="1573488283838" TEXT="... equal to the number of collections"/>
</node>
</node>
<node CREATED="1573570098460" ID="ID_1128087923" MODIFIED="1573570099674" TEXT="reduce">
<node CREATED="1573570104228" ID="ID_1934552107" MODIFIED="1573570109456" TEXT="Process each element in a sequence"/>
<node CREATED="1573570111947" ID="ID_1203347259" MODIFIED="1573570114737" TEXT="... to build a result">
<node CREATED="1573570527698" ID="ID_1224134492" MODIFIED="1573570536229" TEXT="Producing new map with same keys but updated value"/>
<node CREATED="1573570542447" ID="ID_1991244006" MODIFIED="1573570549132" TEXT="Filter out keys for a map based on its value"/>
</node>
</node>
<node CREATED="1573571433094" ID="ID_1266616883" MODIFIED="1573571433893" TEXT="take, drop, take-while, and drop-while">
<node CREATED="1573571489320" ID="ID_1103741476" MODIFIED="1573571491134" TEXT="take">
<node CREATED="1573571491353" ID="ID_120403664" MODIFIED="1573571498189" TEXT="return first n elements of a sequence"/>
</node>
<node CREATED="1573571499025" ID="ID_1722261570" MODIFIED="1573571500350" TEXT="drop">
<node CREATED="1573571500665" ID="ID_532320463" MODIFIED="1573571512294" TEXT="drop first n elements of a sequence and return the sequence"/>
</node>
<node CREATED="1573571567960" ID="ID_157137096" MODIFIED="1573571583452" TEXT="take-while / drop while">
<node CREATED="1573571583736" ID="ID_1676534340" MODIFIED="1573571590860" TEXT="take a predicate function"/>
<node CREATED="1573571591224" ID="ID_327994281" MODIFIED="1573571597867" TEXT="... function which return true or false"/>
<node CREATED="1573571605470" ID="ID_405406937" MODIFIED="1573571610989" TEXT="... to determine what to take / drop"/>
</node>
</node>
<node CREATED="1573572353136" ID="ID_835555335" MODIFIED="1573572353740" TEXT="filter and some">
<node CREATED="1573572358984" ID="ID_1572905330" MODIFIED="1573572361766" TEXT="filter">
<node CREATED="1573572361977" ID="ID_613039121" MODIFIED="1573572372454" TEXT="return all elements of sequence that test true"/>
<node CREATED="1573572372873" ID="ID_939516789" MODIFIED="1573572376654" TEXT="... for a predicate function"/>
</node>
<node CREATED="1573572557929" ID="ID_913679104" MODIFIED="1573572559125" TEXT="some">
<node CREATED="1573572559792" ID="ID_45041409" MODIFIED="1573572686900" TEXT="return predicate function value if predicate is verified"/>
<node CREATED="1573572687991" ID="ID_696752290" MODIFIED="1573572692348" TEXT="... nil otherwise"/>
</node>
</node>
<node CREATED="1573643115880" ID="ID_956191348" MODIFIED="1573643120052" TEXT="sort and sort by">
<node CREATED="1573643122208" ID="ID_1783640074" MODIFIED="1573643123652" TEXT="sort">
<node CREATED="1573643123880" ID="ID_1694577206" MODIFIED="1573643129460" TEXT="sort element in ascending order"/>
</node>
<node CREATED="1573643159725" ID="ID_244256734" MODIFIED="1573643165522" TEXT="sort-by">
<node CREATED="1573643166223" ID="ID_1894884709" MODIFIED="1573643170082" TEXT="apply function">
<node CREATED="1573643170278" ID="ID_722935334" MODIFIED="1573643172976" TEXT="key function">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1573643175311" ID="ID_1032944238" MODIFIED="1573643184275" TEXT="... to elements of sequence"/>
<node CREATED="1573643184751" ID="ID_543006290" MODIFIED="1573643217642" TEXT="... use value it returns"/>
<node CREATED="1573643192543" ID="ID_1354677954" MODIFIED="1573643201060" TEXT="... to determine the order"/>
</node>
</node>
<node CREATED="1573643276134" ID="ID_1105000928" MODIFIED="1573643277403" TEXT="concat">
<node CREATED="1573643277661" ID="ID_283493013" MODIFIED="1573643289339" TEXT="appends the members of one sequence to end of another"/>
</node>
</node>
<node CREATED="1573643784571" FOLDED="true" ID="ID_243290883" MODIFIED="1573807509241" TEXT="Lazy Seqs">
<node CREATED="1573643933897" ID="ID_843434146" MODIFIED="1573643935926" TEXT="Introduction">
<node CREATED="1573643843626" ID="ID_778113222" MODIFIED="1573643848054" TEXT="Definition">
<node CREATED="1573643848218" ID="ID_1682743286" MODIFIED="1573643874534" TEXT="seq which members are not computed"/>
<node CREATED="1573643856177" ID="ID_133076426" MODIFIED="1573643868542" TEXT="until you try to access them">
<node CREATED="1573643881866" ID="ID_1084295661" MODIFIED="1573643886435" TEXT="realizing the seq">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
</node>
<node CREATED="1573643823346" ID="ID_114027209" MODIFIED="1573643829077" TEXT="Example">
<icon BUILTIN="wizard"/>
<node COLOR="#338800" CREATED="1573643825370" ID="ID_380666895" MODIFIED="1573749312772" TEXT="map">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
<node COLOR="#338800" CREATED="1573643826210" ID="ID_1627241066" MODIFIED="1573749312772" TEXT="filter">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1573643901314" ID="ID_123590641" MODIFIED="1573643907598" TEXT="Makes program more efficient">
<node CREATED="1573643907754" ID="ID_663821994" MODIFIED="1573643911215" TEXT="computed when needed"/>
</node>
<node CREATED="1573643918338" ID="ID_677982163" MODIFIED="1573643926725" TEXT="Allow you to construct infinite sequences"/>
<node CREATED="1573643818034" ID="ID_950968981" MODIFIED="1573643823143" TEXT="Many function return lazy seqs"/>
</node>
<node CREATED="1573643932327" ID="ID_1313538853" MODIFIED="1573643933372" TEXT="Demonstrating Lazy Seq Efficiency">
<node CREATED="1573644870448" ID="ID_252889277" MODIFIED="1573645559649" TEXT="Execution in two parts">
<node CREATED="1573644885634" ID="ID_1581872655" MODIFIED="1573644893724" TEXT="a recipe for how to realize the elements of a sequence">
<icon BUILTIN="full-1"/>
</node>
<node CREATED="1573644898985" ID="ID_544483223" MODIFIED="1573644901461" TEXT="the elements that have been realized so far">
<icon BUILTIN="full-2"/>
</node>
</node>
<node CREATED="1573644909089" ID="ID_368682991" MODIFIED="1573644915502" TEXT="When using function like map">
<node CREATED="1573644915689" ID="ID_964949877" MODIFIED="1573644923230" TEXT="Invoking it doesn&apos;t apply any element to function"/>
<node CREATED="1573644923681" ID="ID_571467936" MODIFIED="1573644935862" TEXT="Each time you try to access unrealized element">
<node CREATED="1573644938578" ID="ID_1357418825" MODIFIED="1573644950828" TEXT="recipe is applied to generate the requested element"/>
<node CREATED="1573645162782" ID="ID_1872015032" MODIFIED="1573645170867" TEXT="... plus other elements afterward">
<node CREATED="1573645171070" ID="ID_1336288930" MODIFIED="1573645173903" TEXT="chunks">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
<node CREATED="1573645180583" ID="ID_1646681361" MODIFIED="1573645186275" TEXT="... because always better performances"/>
</node>
</node>
<node CREATED="1573645353469" ID="ID_1201535497" MODIFIED="1573645358666" TEXT="Lazy seq elements need to be realized only once">
<node CREATED="1573645358876" ID="ID_608623716" MODIFIED="1573645363771" TEXT="when doing the same operation again"/>
<node CREATED="1573645364118" ID="ID_1337501812" MODIFIED="1573645368394" TEXT="... it will be way faster"/>
</node>
</node>
</node>
<node CREATED="1573645542603" ID="ID_665256745" MODIFIED="1573645543365" TEXT="Infinite Sequences ">
<node CREATED="1573650423615" ID="ID_1456792888" MODIFIED="1573650429146" TEXT="functions">
<node COLOR="#338800" CREATED="1573650429327" ID="ID_888705117" MODIFIED="1573749293387" TEXT="repeat">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
<node COLOR="#338800" CREATED="1573650431758" ID="ID_624851034" MODIFIED="1573749295092" TEXT="repeatedly">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1573650450886" ID="ID_1679659019" MODIFIED="1573650495026" TEXT="Lazy seq recipe&apos;s function doesn&apos;t have to have an endpoint">
<node CREATED="1573650495238" ID="ID_1647005345" MODIFIED="1573650504560" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node COLOR="#338800" CREATED="1573650496438" ID="ID_796291706" MODIFIED="1573749298763" TEXT="take">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
<node COLOR="#338800" CREATED="1573650498198" ID="ID_1935424388" MODIFIED="1573749304034" TEXT="first">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
<node CREATED="1573650499302" ID="ID_1092141318" MODIFIED="1573650499946" TEXT="..."/>
</node>
</node>
</node>
</node>
<node CREATED="1573651156111" ID="ID_308312499" MODIFIED="1573841795821" TEXT="The Collection Abstraction">
<node CREATED="1573651883433" ID="ID_514053680" MODIFIED="1573651884992" TEXT="Introduction">
<node CREATED="1573651161601" ID="ID_792932170" MODIFIED="1573651168253" TEXT="Closely related to sequence abstraction"/>
<node CREATED="1573651176944" ID="ID_1585628074" MODIFIED="1573651188315" TEXT="... all clojure core data structure use both abstractions">
<node COLOR="#338800" CREATED="1573651780907" ID="ID_1456704824" MODIFIED="1573749323293" TEXT="vector">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
<node COLOR="#338800" CREATED="1573651782907" ID="ID_828610445" MODIFIED="1573749323293" TEXT="maps">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
<node COLOR="#338800" CREATED="1573651783882" ID="ID_1232322193" MODIFIED="1573749323293" TEXT="lists">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
<node COLOR="#338800" CREATED="1573651785060" ID="ID_1719261783" MODIFIED="1573749323292" TEXT="sets">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1573651796442" FOLDED="true" ID="ID_1425274377" MODIFIED="1573651889327" TEXT="Act on the data structure as a whole">
<node CREATED="1573651803172" ID="ID_549264991" MODIFIED="1573651804376" TEXT="Examples">
<node CREATED="1573651805647" ID="ID_1540158952" MODIFIED="1573651814823" TEXT="count"/>
<node CREATED="1573651808483" ID="ID_450981129" MODIFIED="1573651811055" TEXT="empty?"/>
<node CREATED="1573651811443" ID="ID_1124792309" MODIFIED="1573651813888" TEXT="every?"/>
</node>
</node>
</node>
<node COLOR="#338800" CREATED="1573651892118" ID="ID_312733309" MODIFIED="1573749268756" TEXT="into">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1573651943273" ID="ID_1126271930" MODIFIED="1573651968846" TEXT="convert back the return value"/>
<node CREATED="1573651969201" ID="ID_1778413319" MODIFIED="1573651985750" TEXT="... into the original input data structure "/>
<node CREATED="1573652779187" ID="ID_116117580" MODIFIED="1573652782827" TEXT="Take too collections">
<node CREATED="1573652782828" ID="ID_874322805" MODIFIED="1573652785184" TEXT="empty or not"/>
<node CREATED="1573652785570" ID="ID_725483979" MODIFIED="1573652803200" TEXT="... and add all elements from second"/>
<node CREATED="1573652795130" ID="ID_1977077584" MODIFIED="1573652800696" TEXT="... to the first"/>
</node>
</node>
<node COLOR="#338800" CREATED="1573652806444" ID="ID_1765208812" MODIFIED="1573749269538" TEXT="conj">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1573652813579" ID="ID_1560968528" MODIFIED="1573652818967" TEXT="Add elements to a collection"/>
</node>
</node>
<node CREATED="1573653132512" FOLDED="true" ID="ID_183780025" MODIFIED="1573807512786" TEXT="Function Functions">
<node CREATED="1573653180255" ID="ID_1200950295" MODIFIED="1573653192053" TEXT="Clojure accept functions as argument and can return functions"/>
<node CREATED="1573653194198" ID="ID_221926788" MODIFIED="1573653198701" TEXT="functions">
<node COLOR="#338800" CREATED="1573653199001" ID="ID_1670801770" MODIFIED="1573749276418" TEXT="apply">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
<node COLOR="#338800" CREATED="1573653200536" ID="ID_529082495" MODIFIED="1573749275858" TEXT="partial">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1573653202377" ID="ID_1372815404" MODIFIED="1573653209461" TEXT="... both accept and return functions"/>
<node COLOR="#338800" CREATED="1573653212744" ID="ID_1234042248" MODIFIED="1573749280090" TEXT="apply">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1573654640405" ID="ID_1259981149" MODIFIED="1573654651487" TEXT="explodes a seqable data structure"/>
<node CREATED="1573654656261" ID="ID_711982238" MODIFIED="1573654666913" TEXT="... so can be passed to a function that expect rest parameter"/>
<node CREATED="1573655243798" ID="ID_457099268" MODIFIED="1573655250653" TEXT="... last argument of apply is exploded">
<node CREATED="1573655250823" ID="ID_312601680" MODIFIED="1573655264260" TEXT="the arguments before are passed to the function as argument"/>
</node>
</node>
<node COLOR="#338800" CREATED="1573730551798" ID="ID_556713228" MODIFIED="1573749282249" TEXT="partial">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1573730565494" ID="ID_1540109559" MODIFIED="1573730574690" TEXT="take a function and any number of arguments"/>
<node CREATED="1573730575046" ID="ID_1602143279" MODIFIED="1573730584131" TEXT="return a new function"/>
<node CREATED="1573731867492" ID="ID_282907271" MODIFIED="1573731904335" TEXT="When call returned function">
<node CREATED="1573731877467" ID="ID_286204082" MODIFIED="1573731915983" TEXT="it&apos;s called with">
<node CREATED="1573731916204" ID="ID_254360430" MODIFIED="1573731920103" TEXT="partial&apos;s arguments"/>
<node CREATED="1573731920491" ID="ID_1326081995" MODIFIED="1573731922457" TEXT="new arguments"/>
</node>
</node>
<node CREATED="1573731931260" ID="ID_1823236328" MODIFIED="1573731952512" TEXT="To use when you repeating same combination"/>
<node CREATED="1573731953307" ID="ID_1219051509" MODIFIED="1573731958336" TEXT="... of function and arguments"/>
<node CREATED="1573731959004" ID="ID_1976583971" MODIFIED="1573731962247" TEXT="... in different contexts"/>
</node>
<node COLOR="#338800" CREATED="1573732167666" ID="ID_504828343" MODIFIED="1573749284900" TEXT="complement">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1573732683949" ID="ID_1195765145" MODIFIED="1573732687955" TEXT="Take a function"/>
<node CREATED="1573732688318" ID="ID_854134042" MODIFIED="1573732691034" TEXT="return a function">
<node CREATED="1573732691199" ID="ID_268766821" MODIFIED="1573732709073" TEXT="which is the complement">
<node CREATED="1573732738317" ID="ID_1069523466" MODIFIED="1573732740586" TEXT="the negation"/>
</node>
<node CREATED="1573732709956" ID="ID_137112928" MODIFIED="1573732715578" TEXT="... of the result of the input function"/>
</node>
</node>
</node>
<node CREATED="1573732847819" ID="ID_1395816571" MODIFIED="1573732848581" TEXT="A Vampire Data Analysis Program for the FWPD"/>
</node>
<node CREATED="1573807518256" FOLDED="true" ID="ID_1785830408" MODIFIED="1585039188320" POSITION="right" TEXT="Functional Programming">
<icon BUILTIN="full-5"/>
<node CREATED="1573807533411" ID="ID_755680675" MODIFIED="1573807846110" TEXT="Pure Functions: What and Why">
<node CREATED="1573807846490" ID="ID_1755214403" MODIFIED="1573807848550" TEXT="Introduction">
<node CREATED="1573807593971" ID="ID_725819727" MODIFIED="1573807600128" TEXT="Definition">
<node CREATED="1573807601284" ID="ID_1946200039" MODIFIED="1573807663310" TEXT="Always result same result with same arguments">
<icon BUILTIN="full-1"/>
<node CREATED="1573807616573" ID="ID_964971511" MODIFIED="1573807634038" TEXT="referential transparency">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1573807647924" ID="ID_1373082310" MODIFIED="1573807665406" TEXT="Don&apos;t cause any side effect">
<icon BUILTIN="full-2"/>
<node CREATED="1573807672501" ID="ID_1251381178" MODIFIED="1573807689063" TEXT="Don&apos;t make any changes"/>
<node CREATED="1573807689444" ID="ID_679918361" MODIFIED="1573807699902" TEXT="... observables outside of function"/>
<node CREATED="1573807700537" ID="ID_1590524659" MODIFIED="1573807726600" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node CREATED="1573807702058" ID="ID_587761435" MODIFIED="1573807713920" TEXT="Changing an externally accessible mutable object"/>
<node CREATED="1573807714315" ID="ID_844676776" MODIFIED="1573807718287" TEXT="Writing to a file"/>
</node>
</node>
</node>
<node CREATED="1573807732211" ID="ID_1687902996" MODIFIED="1573807754167" TEXT="Easier to reason about">
<node CREATED="1573807737699" ID="ID_987753614" MODIFIED="1573807759007" TEXT="Functions totally isolated"/>
<node CREATED="1573807759403" ID="ID_1300794167" MODIFIED="1573807784000" TEXT="Unable to impact other part of the system"/>
</node>
<node CREATED="1573807796558" ID="ID_851399566" MODIFIED="1573807798735" TEXT="More consistent">
<node CREATED="1573807798914" ID="ID_1197517997" MODIFIED="1573807802039" TEXT="Same input, same output"/>
</node>
<node CREATED="1573807820128" ID="ID_943305217" MODIFIED="1573807834773" TEXT="Brick of functionality you can confidently use"/>
</node>
<node CREATED="1573807849018" ID="ID_1621546549" MODIFIED="1573807849622" TEXT="Pure Functions Are Referentially Transparent">
<node CREATED="1573807906217" ID="ID_1876203405" MODIFIED="1573807916926" TEXT="To return same result with same arguments">
<node CREATED="1573807917394" ID="ID_820763037" MODIFIED="1573807927317" TEXT="Rely on">
<node CREATED="1573807927505" ID="ID_323233525" MODIFIED="1573807948925" TEXT="Their own arguments">
<icon BUILTIN="full-1"/>
</node>
<node CREATED="1573807937681" ID="ID_1874617625" MODIFIED="1573807951678" TEXT="Immutable values">
<icon BUILTIN="full-2"/>
</node>
</node>
</node>
<node CREATED="1573807957209" ID="ID_1644837803" MODIFIED="1573808314939" TEXT="Example">
<icon BUILTIN="wizard"/>
<node CREATED="1573807959121" ID="ID_621531508" MODIFIED="1573807961621" TEXT="(+ 1 2)"/>
</node>
<node CREATED="1573808287831" ID="ID_275315780" MODIFIED="1573808292802" TEXT="... what external conditions"/>
<node CREATED="1573808328965" ID="ID_878839648" MODIFIED="1573808333931" TEXT="External conditions">
<node CREATED="1573808283903" ID="ID_766369202" MODIFIED="1573808340747" TEXT="Never have to consider them"/>
<node CREATED="1573808342094" ID="ID_1791397891" MODIFIED="1573808347939" TEXT="Don&apos;t affect return value"/>
</node>
<node CREATED="1573808350566" ID="ID_197021202" MODIFIED="1573808353411" TEXT="... even more important if">
<node CREATED="1573808353749" ID="ID_609343898" MODIFIED="1573808361331" TEXT="function used in multiple place"/>
<node CREATED="1573808361701" ID="ID_815661074" MODIFIED="1573808370675" TEXT="nested in chain of function calls"/>
</node>
<node CREATED="1573808381725" ID="ID_776923827" MODIFIED="1573808389907" TEXT="Reality is largely referentially transparent">
<node CREATED="1573808390110" ID="ID_1874099180" MODIFIED="1573808401746" TEXT="Gravitational force">
<node CREATED="1573808401982" ID="ID_725604335" MODIFIED="1573808405371" TEXT="Return of a function"/>
<node CREATED="1573808405798" ID="ID_1743082770" MODIFIED="1573808412345" TEXT="... with two objects as arguments"/>
</node>
</node>
</node>
<node CREATED="1573808427748" ID="ID_1705168301" MODIFIED="1573808428325" TEXT="Pure Functions Have No Side Effects">
<node CREATED="1573808451260" ID="ID_746493316" MODIFIED="1573808458410" TEXT="You program have to have side effects">
<node CREATED="1573808458685" ID="ID_280098339" MODIFIED="1573841807157" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node CREATED="1573808465094" ID="ID_1999906699" MODIFIED="1573808469234" TEXT="Write to a disk"/>
<node CREATED="1573841825088" ID="ID_61211098" MODIFIED="1573841831219" TEXT="RGB value of monitor pixels"/>
</node>
</node>
<node CREATED="1573841843558" ID="ID_1723417365" MODIFIED="1573841870474" TEXT="Provide uncertainty about what the names in your code are referring to"/>
<node CREATED="1573841884415" ID="ID_138246096" MODIFIED="1573841888170" TEXT="When no side effects">
<node CREATED="1573841888398" ID="ID_755887130" MODIFIED="1573841895755" TEXT="Only consider relationship between">
<node CREATED="1573841895949" ID="ID_1126653056" MODIFIED="1573841897330" TEXT="Input"/>
<node CREATED="1573841897670" ID="ID_1857696837" MODIFIED="1573841899225" TEXT="Output"/>
</node>
</node>
<node CREATED="1573841916302" ID="ID_1514907906" MODIFIED="1573841936498" TEXT="Need to worry how the world around will change">
<node CREATED="1573841952829" ID="ID_1621501148" MODIFIED="1573841957034" TEXT="True for the function itself"/>
<node CREATED="1573841957381" ID="ID_1923554338" MODIFIED="1573841961402" TEXT="... and every function depending on it"/>
</node>
</node>
</node>
<node CREATED="1573842021205" ID="ID_1669864033" MODIFIED="1573842022212" TEXT="Living with Immutable Data Structures">
<node CREATED="1573842026571" ID="ID_781258101" MODIFIED="1573842028093" TEXT="Recursion Instead of for/while">
<node CREATED="1573842114594" ID="ID_1282241958" MODIFIED="1573842127305" TEXT="In Clojure, all data structure are immutable"/>
<node CREATED="1573842127805" ID="ID_1533782630" MODIFIED="1573842142991" TEXT="Functional alternative to mutation is recursion"/>
<node CREATED="1573842853871" ID="ID_1751231473" MODIFIED="1573842858483" TEXT="All recursive solution">
<node CREATED="1573842860190" ID="ID_348030917" MODIFIED="1573842870314" TEXT="check the argument it&apos;s processing against a base condition"/>
</node>
<node CREATED="1573843205507" ID="ID_966992724" MODIFIED="1573843216152" TEXT="When doing recursion, use function recur">
<node CREATED="1573843216322" ID="ID_1468301899" MODIFIED="1573843223680" TEXT="instead of calling the same function"/>
<node CREATED="1573843249499" ID="ID_534435005" LINK="https://en.wikipedia.org/wiki/Tail_call" MODIFIED="1573843286119" TEXT="Clojure doesn&apos;t have tail call optimization"/>
</node>
<node CREATED="1573843477546" ID="ID_1459282154" LINK="https://hypirion.com/musings/understanding-persistent-vector-pt-1" MODIFIED="1573843495798" TEXT="Clojure&apos;s data structures are implemented using Structure sharing"/>
</node>
<node CREATED="1573843509313" ID="ID_1759000146" MODIFIED="1573843513324" TEXT=" Function Composition Instead of Attribute Mutation"/>
<node CREATED="1573844081053" ID="ID_1640718647" MODIFIED="1573844086039" TEXT="function composition">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1573844086859" ID="ID_189925539" MODIFIED="1573844097536" TEXT="passing one return of a function">
<node CREATED="1573844098459" ID="ID_802525228" MODIFIED="1573844104081" TEXT="to an input of another"/>
</node>
</node>
<node CREATED="1573844196564" ID="ID_821333727" MODIFIED="1573844201977" TEXT="Difference of paradigm">
<node CREATED="1573844202156" ID="ID_1543093906" MODIFIED="1573844203217" TEXT="OOP">
<node CREATED="1573844203468" ID="ID_223244473" MODIFIED="1573844216472" TEXT="Data embody in an object"/>
<node CREATED="1573844216875" ID="ID_1406231176" MODIFIED="1573844229713" TEXT="Poke / prod it until it looks right"/>
<node CREATED="1573844232092" ID="ID_136490115" MODIFIED="1573844236784" TEXT="Original data lost"/>
</node>
<node CREATED="1573844237548" ID="ID_1622955704" MODIFIED="1573844239400" TEXT="Functional">
<node CREATED="1573844244043" ID="ID_1572831323" MODIFIED="1573844248152" TEXT="Data is unchanging"/>
<node CREATED="1573844248523" ID="ID_563473397" MODIFIED="1573844261158" TEXT="Derive new data from existing one"/>
<node CREATED="1573844266667" ID="ID_427176752" MODIFIED="1573844271791" TEXT="Original data remains safe"/>
</node>
</node>
</node>
<node CREATED="1573844338618" ID="ID_1462186762" MODIFIED="1573844339740" TEXT="Cool Things to Do with Pure Functions">
<node CREATED="1573844346435" ID="ID_507285715" MODIFIED="1573844352175" TEXT="Can derive function from existing ones">
<node CREATED="1573844352411" ID="ID_1402440385" MODIFIED="1573844359303" TEXT="same way deriving data from existing one"/>
<node CREATED="1573844368083" ID="ID_1993828341" MODIFIED="1573844372970" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node CREATED="1573844369776" ID="ID_226550047" MODIFIED="1573844371151" TEXT="partial"/>
</node>
</node>
<node CREATED="1573844391825" ID="ID_854032217" MODIFIED="1573844393702" TEXT="comp">
<node CREATED="1573844416114" ID="ID_617917208" MODIFIED="1573844437598" TEXT="New function">
<node CREATED="1573844437842" ID="ID_1551784817" MODIFIED="1573844440798" TEXT="from composition of any number of functions"/>
</node>
<node CREATED="1573844518818" ID="ID_509065385" MODIFIED="1573844524182" TEXT="on functions f1, f2, ... fn">
<node CREATED="1573844526409" ID="ID_531969882" MODIFIED="1573844533614" TEXT="creates a new function g"/>
<node CREATED="1573844534321" ID="ID_1151779601" MODIFIED="1573844545702" TEXT="... such that g(x1, x2, ... xn) equals f1( f2( fn(x1, x2, ... xn)))."/>
</node>
</node>
<node CREATED="1573913745059" ID="ID_1686628152" MODIFIED="1573913746951" TEXT="memoize">
<node CREATED="1573913747307" ID="ID_726234063" MODIFIED="1573913761687" TEXT="remember result of particular function call"/>
<node CREATED="1573913773730" ID="ID_1304359229" MODIFIED="1573913786519" TEXT="Remember: can replace pure function with their result">
<node CREATED="1573913786707" ID="ID_1758386102" MODIFIED="1573913799142" TEXT="nothing will change"/>
</node>
<node CREATED="1573913826315" ID="ID_708813701" MODIFIED="1573914085718" TEXT="Useful for">
<node CREATED="1573914085992" ID="ID_1134155929" MODIFIED="1573914104524" TEXT=" reexecuting functions which are computationally intensive"/>
<node CREATED="1573914104856" ID="ID_849579683" MODIFIED="1573914111572" TEXT="functions that makes network requests"/>
</node>
</node>
</node>
</node>
<node CREATED="1574923271108" FOLDED="true" ID="ID_983039471" LINK="https://www.braveclojure.com/organization/" MODIFIED="1579970693022" POSITION="right" TEXT="Organizing Your Project: A Librarian&#x2019;s Tale">
<icon BUILTIN="full-6"/>
<node CREATED="1574923279716" ID="ID_1998632901" MODIFIED="1574923328007" TEXT="Your Project as a Library">
<node CREATED="1574923289084" ID="ID_1316575729" MODIFIED="1574923294681" TEXT="Namespaces are object of type">
<node CREATED="1574923294851" ID="ID_960317841" MODIFIED="1574923295271" TEXT="clojure.lang.Namespace"/>
</node>
<node CREATED="1574923307900" ID="ID_579295220" MODIFIED="1574923317624" TEXT="Possibility to have multiple namespaces"/>
<node CREATED="1574923328323" ID="ID_1271300495" MODIFIED="1574923333327" TEXT="You are always in a namespace"/>
<node CREATED="1574923372635" ID="ID_771543471" MODIFIED="1574923378511" TEXT="Quote in clojure">
<node CREATED="1574923378817" ID="ID_743989940" MODIFIED="1574923387190" TEXT="Use symbol itself">
<node CREATED="1574923387425" ID="ID_914085940" MODIFIED="1574923395270" TEXT="not the reference">
<node CREATED="1574923395458" ID="ID_395802174" MODIFIED="1574923396990" TEXT="function"/>
<node CREATED="1574923397358" ID="ID_1763402911" MODIFIED="1574923398390" TEXT="variable"/>
<node CREATED="1574923398756" ID="ID_722004065" MODIFIED="1574923399359" TEXT="..."/>
</node>
</node>
<node CREATED="1574923401923" ID="ID_390195766" MODIFIED="1574923735322" TEXT="Example">
<icon BUILTIN="wizard"/>
<node CREATED="1574923405243" ID="ID_158538469" MODIFIED="1574923437455" TEXT="&apos;(map inc [1 2])">
<node CREATED="1574923420050" ID="ID_1782985441" MODIFIED="1574923428967" TEXT="; =&gt; (map inc [1 2])"/>
</node>
</node>
</node>
</node>
<node CREATED="1574923462530" ID="ID_838990957" MODIFIED="1574923463163" TEXT="Storing Objects with def">
<node CREATED="1574923747479" ID="ID_296364500" MODIFIED="1574940337289" TEXT="interning a var">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1574923757503" ID="ID_1036970011" MODIFIED="1574923760769" TEXT="Update the current namespace&#x2019;s map with the association between great-books and the var.">
<icon BUILTIN="full-1"/>
</node>
<node CREATED="1574923764376" ID="ID_1658269539" MODIFIED="1574923766186" TEXT="Find a free storage shelf.">
<icon BUILTIN="full-2"/>
</node>
<node CREATED="1574923770952" ID="ID_87725408" MODIFIED="1574923774193" TEXT="Store [&quot;East of Eden&quot; &quot;The Glass Bead Game&quot;] on the shelf.">
<icon BUILTIN="full-3"/>
</node>
<node CREATED="1574923777384" ID="ID_1900422704" MODIFIED="1574923778880" TEXT="Write the address of the shelf on the var.">
<icon BUILTIN="full-4"/>
</node>
<node CREATED="1574923782655" ID="ID_1275542495" MODIFIED="1574923784752" TEXT="Return the var (in this case, #&apos;user/great-books).">
<icon BUILTIN="full-4"/>
</node>
</node>
<node CREATED="1574923727040" ID="ID_96256183" MODIFIED="1574923737058" TEXT="Example">
<icon BUILTIN="wizard"/>
<node CREATED="1574923743615" ID="ID_924152879" MODIFIED="1574923744185" TEXT="(def great-books [&quot;East of Eden&quot; &quot;The Glass Bead Game&quot;])"/>
<node CREATED="1574940359630" ID="ID_629673640" MODIFIED="1574940365084" TEXT="Map of intervened var">
<node CREATED="1574940377479" ID="ID_1952692464" MODIFIED="1574940378027" TEXT="(ns-interns *ns*)"/>
</node>
</node>
<node CREATED="1574940638763" ID="ID_257806524" MODIFIED="1574940640195" TEXT="#&apos;user/great-books">
<node CREATED="1574940640508" ID="ID_1776228666" MODIFIED="1574940643843" TEXT="reader form">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1574940644469" ID="ID_979457955" MODIFIED="1574940645754" TEXT="of a var"/>
</node>
</node>
</node>
<node CREATED="1574940945238" ID="ID_120715522" MODIFIED="1574940946595" TEXT="Creating and Switching to Namespaces">
<node CREATED="1574940957651" ID="ID_70642259" MODIFIED="1574940959095" TEXT="Functions">
<node CREATED="1574940959611" ID="ID_1925858340" MODIFIED="1574940962301" TEXT="create-ns">
<node CREATED="1574941087432" ID="ID_1622821427" MODIFIED="1574941090413" TEXT="create namespace"/>
<node CREATED="1574941070578" ID="ID_1324027104" MODIFIED="1574941074079" TEXT="not very used in practice"/>
</node>
<node CREATED="1574940962657" ID="ID_871512873" MODIFIED="1574940964215" TEXT="in-ns">
<node CREATED="1574941081194" ID="ID_52757181" MODIFIED="1574941086261" TEXT="create and swith to namespace"/>
<node CREATED="1574941093624" ID="ID_1424649999" MODIFIED="1574941094798" TEXT="more used"/>
</node>
</node>
<node CREATED="1574940969601" ID="ID_51298573" MODIFIED="1574940972509" TEXT="Macro">
<node CREATED="1574940972705" ID="ID_1226321002" MODIFIED="1574940973157" TEXT="ns"/>
</node>
<node CREATED="1574941512750" ID="ID_277265181" MODIFIED="1574941523242" TEXT="Get symbol from namespace">
<node CREATED="1574941523446" ID="ID_97290436" MODIFIED="1574941535445" TEXT="cheese.taxonomy/cheddars "/>
<node CREATED="1574941537812" ID="ID_1929766261" MODIFIED="1574941540082" TEXT="other ways">
<node CREATED="1574941540293" ID="ID_703779234" MODIFIED="1574941540953" TEXT="func">
<node CREATED="1574941542942" ID="ID_1122133585" MODIFIED="1574941543945" TEXT="refer"/>
<node CREATED="1574941544318" ID="ID_1871335551" MODIFIED="1574941545505" TEXT="alias"/>
</node>
</node>
</node>
</node>
<node CREATED="1574942646901" ID="ID_752095397" MODIFIED="1575028450636" TEXT=" Real Project Organization">
<node CREATED="1574942656564" ID="ID_915532726" MODIFIED="1574942657204" TEXT=" The Relationship Between File Paths and Namespace Names">
<node CREATED="1574942834036" ID="ID_474397784" MODIFIED="1574942835633" TEXT="Functions">
<node CREATED="1574942835813" ID="ID_180154067" MODIFIED="1574942836248" TEXT="ns">
<node CREATED="1574942836492" ID="ID_786941262" MODIFIED="1574942851491" TEXT="primary way to create namespace if doesn&apos;t exist and switch to it ">
<font NAME="SansSerif" SIZE="12"/>
</node>
</node>
</node>
<node CREATED="1574942879211" ID="ID_1624160045" MODIFIED="1574942906907" TEXT="One to one mapping between">
<node CREATED="1574942906908" ID="ID_201551140" MODIFIED="1574942909471" TEXT="namespace name"/>
<node CREATED="1574942909954" ID="ID_368097891" MODIFIED="1574942919903" TEXT="path of the file where the namespace is declared"/>
</node>
<node CREATED="1574942920906" ID="ID_1388904715" MODIFIED="1574943062836" TEXT="... according to the conventions">
<node CREATED="1574942925196" ID="ID_829021086" MODIFIED="1574942934214" TEXT="When create directory with lein">
<node CREATED="1574942934449" ID="ID_877610952" MODIFIED="1574942938319" TEXT="source code root"/>
<node CREATED="1574942942530" ID="ID_188168248" MODIFIED="1574942945396" TEXT="... src">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
</node>
</node>
<node CREATED="1574942951506" ID="ID_1724260450" MODIFIED="1574942967912" TEXT="dash correspond to underscore in filesystem">
<node CREATED="1574943043258" ID="ID_1178191285" MODIFIED="1574943050632" TEXT="Example">
<icon BUILTIN="wizard"/>
<node CREATED="1574942968147" ID="ID_847271578" MODIFIED="1574942975840" TEXT="the-divine-cheese-code"/>
<node CREATED="1574942976285" ID="ID_1822030837" MODIFIED="1574942981702" TEXT="the_divine_cheese_code"/>
</node>
</node>
<node CREATED="1574942989131" ID="ID_1613610329" MODIFIED="1574942999774" TEXT="Component preceding a period (.)">
<node CREATED="1574943000155" ID="ID_1720877823" MODIFIED="1574943008448" TEXT="name of a directory"/>
<node CREATED="1574943013755" ID="ID_1506211114" MODIFIED="1574943052496" TEXT="Example">
<icon BUILTIN="wizard"/>
<node CREATED="1574943015131" ID="ID_1689534483" MODIFIED="1574943020775" TEXT="the-divine-cheese-code.core"/>
<node CREATED="1574943021091" ID="ID_276424418" MODIFIED="1574943041607" TEXT="the_divine_cheese_code">
<node CREATED="1574943028250" ID="ID_22708547" MODIFIED="1574943030823" TEXT="is a directory"/>
</node>
</node>
</node>
<node CREATED="1574943063057" ID="ID_707711876" MODIFIED="1574943077095" TEXT="Finale component of a namespace is a file with .clj extension">
<node CREATED="1574943077435" ID="ID_25897832" MODIFIED="1574943102056" TEXT="Example">
<icon BUILTIN="wizard"/>
<node CREATED="1574943080539" ID="ID_620690576" MODIFIED="1574943093135" TEXT="the-divide-cheese-code.core"/>
<node CREATED="1574943093593" ID="ID_490609795" MODIFIED="1574943097062" TEXT="core.clj"/>
</node>
</node>
</node>
</node>
<node CREATED="1574943159856" ID="ID_633581340" MODIFIED="1574943161121" TEXT="Requiring and Using Namespaces">
<node CREATED="1575028240566" ID="ID_1689970859" MODIFIED="1575028242306" TEXT="Functions">
<node CREATED="1575028034913" ID="ID_1263998222" MODIFIED="1575028041995" TEXT="require workflow">
<node CREATED="1575028042358" ID="ID_1339300519" MODIFIED="1575028054147" TEXT="Do nothing if you&apos;ve already called require with a symbol"/>
<node CREATED="1575028057741" ID="ID_1127844205" MODIFIED="1575028074561" TEXT="... otherwise, find the file corresponds to this symbol"/>
</node>
<node CREATED="1575028244870" ID="ID_346218684" MODIFIED="1575028246306" TEXT="use">
<node CREATED="1575028246517" ID="ID_1726638809" MODIFIED="1575028249849" TEXT="require + refer"/>
<node CREATED="1575028264724" ID="ID_302198960" MODIFIED="1575028268345" TEXT="not good in production code"/>
</node>
</node>
</node>
<node CREATED="1575028450636" ID="ID_1619195506" MODIFIED="1575028652210" TEXT="The ns Macro">
<node CREATED="1575028521979" ID="ID_1573604704" MODIFIED="1575028533855" TEXT="Reference Clojure.core namespace by default"/>
<node CREATED="1575028652210" ID="ID_527708307" MODIFIED="1575028657539" TEXT="references">
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<node CREATED="1575028657993" ID="ID_251859809" MODIFIED="1575028659134" TEXT="(:refer-clojure)"/>
<node CREATED="1575028662874" ID="ID_686706493" MODIFIED="1575028664237" TEXT="(:require)"/>
<node CREATED="1575028666577" ID="ID_1736023910" MODIFIED="1575028667123" TEXT="(:use)"/>
<node CREATED="1575028670441" ID="ID_1295917050" MODIFIED="1575028671389" TEXT="(:import)"/>
<node CREATED="1575028673489" ID="ID_571983169" MODIFIED="1575028674197" TEXT="(:load)"/>
<node CREATED="1575028677105" ID="ID_1886415052" MODIFIED="1575028678661" TEXT="(:gen-class)"/>
</node>
<node CREATED="1575028777481" ID="ID_1190236882" MODIFIED="1575028781758" TEXT="Never have to quote symbol"/>
</node>
<node CREATED="1575028873392" ID="ID_1012479085" MODIFIED="1575028873960" TEXT="To Catch a Burglar"/>
</node>
</node>
<node CREATED="1579970698332" ID="ID_20273265" MODIFIED="1579970701533" POSITION="left" TEXT="Clojure Alchemy: Reading, Evaluation, and Macros">
<icon BUILTIN="full-7"/>
<node CREATED="1579970710936" ID="ID_1874417725" MODIFIED="1579970711596" TEXT="An Overview of Clojure&#x2019;s Evaluation Model">
<node CREATED="1579970716969" ID="ID_1811585923" MODIFIED="1579970720760" TEXT="Two-phase system">
<node CREATED="1579970725736" ID="ID_1424546757" MODIFIED="1579970749994" TEXT="Reads">
<icon BUILTIN="full-1"/>
<node CREATED="1579970728578" ID="ID_1204572629" MODIFIED="1579970758100" TEXT="...textual source code"/>
<node CREATED="1579970758688" ID="ID_50645232" MODIFIED="1579970764069" TEXT="Produce data structure"/>
</node>
<node CREATED="1579970733810" ID="ID_327344998" MODIFIED="1579970772098" TEXT="Evaluated">
<icon BUILTIN="full-2"/>
<node CREATED="1579970741712" ID="ID_459885794" MODIFIED="1579970769917" TEXT="Data structure"/>
</node>
</node>
<node CREATED="1579970808208" ID="ID_1787494979" MODIFIED="1579970812716" TEXT="Called homoiconic language">
<node CREATED="1579970813239" ID="ID_110854569" MODIFIED="1579970815653" TEXT="Relation between">
<node CREATED="1579970816760" ID="ID_715912957" MODIFIED="1579970820499" TEXT="source code"/>
<node CREATED="1579970821470" ID="ID_1147525671" MODIFIED="1579970822139" TEXT="data"/>
<node CREATED="1579970822520" ID="ID_790223666" MODIFIED="1579970824284" TEXT="evaluation"/>
</node>
</node>
<node CREATED="1579970836135" ID="ID_1646057998" MODIFIED="1579970842757" TEXT="Programming language require either">
<node CREATED="1579970842920" ID="ID_802340871" MODIFIED="1579970844332" TEXT="Compiler"/>
<node CREATED="1579970844710" ID="ID_1004234164" MODIFIED="1579970848019" TEXT="Interpreter"/>
</node>
<node CREATED="1579970848407" ID="ID_64365772" MODIFIED="1579970877199" TEXT="... to translate code in something else">
<node CREATED="1579970857376" ID="ID_962702954" MODIFIED="1579970859548" TEXT="Machine code"/>
<node CREATED="1579970859904" ID="ID_1134118591" MODIFIED="1579970862396" TEXT="Other language"/>
<node CREATED="1579970863128" ID="ID_231545859" MODIFIED="1579970863740" TEXT="..."/>
</node>
<node CREATED="1579970887968" ID="ID_1519339477" MODIFIED="1579970972556" TEXT="Compiler construct AST">
<node CREATED="1579970894598" ID="ID_1856255183" MODIFIED="1579970900384" TEXT="Abstract Syntax Tree">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
</node>
<node CREATED="1579970907806" ID="ID_1948971469" MODIFIED="1579970914812" TEXT="Data structure represent your program"/>
<node CREATED="1579970924919" ID="ID_729192959" MODIFIED="1579970930099" TEXT="Input to the evaluator">
<node CREATED="1579970938991" ID="ID_885183201" MODIFIED="1579970951211" TEXT="Traverse tree to produce output">
<node CREATED="1579970951368" ID="ID_1746702075" MODIFIED="1579970954307" TEXT="Machine code"/>
<node CREATED="1579970954679" ID="ID_1642328238" MODIFIED="1579970956498" TEXT="Other language"/>
<node CREATED="1579970956941" ID="ID_1190791837" MODIFIED="1579970957595" TEXT="..."/>
</node>
</node>
<node CREATED="1579970973023" ID="ID_1156154203" MODIFIED="1579970979859" TEXT="In most language, AST can&apos;t be accessed">
<node CREATED="1579970987623" ID="ID_1660235393" MODIFIED="1579971012691" TEXT=".... into the programming language itself"/>
<node CREATED="1579971005079" ID="ID_599113140" MODIFIED="1579971008084" TEXT="Separation between">
<node CREATED="1579971013630" ID="ID_1108843" MODIFIED="1579971029426" TEXT="Programming language space"/>
<node CREATED="1579971029774" ID="ID_503242030" MODIFIED="1579971033946" TEXT="Compiler space"/>
</node>
<node CREATED="1579971044406" FOLDED="true" ID="ID_292719558" MODIFIED="1579971540788" TEXT="Example">
<icon BUILTIN="wizard"/>
<icon BUILTIN="licq"/>
<node CREATED="1579971099916" ID="ID_540896543" MODIFIED="1579971104410">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <img src="evaluation_non_lisp.png" />
  </body>
</html></richcontent>
</node>
</node>
</node>
<node CREATED="1579971141052" ID="ID_191971474" MODIFIED="1579971580455" TEXT="In Clojure (and LISP)">
<node CREATED="1579971249963" ID="ID_363348992" MODIFIED="1579971321160" TEXT="AST is native data structure">
<node CREATED="1579971267740" ID="ID_1877329744" MODIFIED="1579971288280" TEXT="Clojure lists / values">
<node CREATED="1579971339909" ID="ID_146738085" MODIFIED="1579971355033" TEXT="Root">
<node CREATED="1579971355258" ID="ID_1190676782" MODIFIED="1579971357639" TEXT="First element"/>
</node>
<node CREATED="1579971343956" ID="ID_1409788255" MODIFIED="1579971361032" TEXT="Children">
<node CREATED="1579971361242" ID="ID_1736539030" MODIFIED="1579971366728" TEXT="Other elements"/>
</node>
</node>
<node CREATED="1579971377795" FOLDED="true" ID="ID_1103473172" MODIFIED="1579971552676" TEXT="Example">
<icon BUILTIN="licq"/>
<icon BUILTIN="wizard"/>
<node CREATED="1579971410282" ID="ID_191249788" MODIFIED="1579971412885">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <img src="ast_list.png" />
  </body>
</html></richcontent>
</node>
</node>
</node>
<node CREATED="1579971468315" ID="ID_409543935" MODIFIED="1579971469277" TEXT="S-Expressions">
<node CREATED="1579971469771" ID="ID_1093950163" MODIFIED="1579971476855" TEXT="Used for two different purposes">
<node CREATED="1579971477083" ID="ID_881183440" MODIFIED="1579971477790" TEXT="Code"/>
<node CREATED="1579971478164" ID="ID_523960488" MODIFIED="1579971480688" TEXT="AST"/>
</node>
<node CREATED="1579971481242" ID="ID_1585214775" MODIFIED="1585034442993" TEXT="... pretty ambiguous term"/>
</node>
<node CREATED="1579971559930" FOLDED="true" ID="ID_1615271223" MODIFIED="1585035569341" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node CREATED="1585035069450" ID="ID_1202301220" MODIFIED="1585035100184" TEXT="General workflow">
<icon BUILTIN="licq"/>
<node CREATED="1579971615306" ID="ID_1411107553" MODIFIED="1579971619306">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <img src="evaluation_lisp.PNG" />
  </body>
</html></richcontent>
</node>
</node>
<node CREATED="1585035101605" ID="ID_333211452" MODIFIED="1585035507737" TEXT="addition-list">
<node CREATED="1585035110162" ID="ID_1380141076" MODIFIED="1585035409167" TEXT="Base">
<richcontent TYPE="NOTE"><html>
  <head>
    
  </head>
  <body>
    <p>
      (def addition-list (list + 1 2))<br />(eval addition-list) ; =&gt; 3
    </p>
  </body>
</html>
</richcontent>
<icon BUILTIN="full-1"/>
</node>
<node CREATED="1585035419780" ID="ID_596879200" MODIFIED="1585035501092">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <img src="example-addition-list-2.png" />
  </body>
</html></richcontent>
<icon BUILTIN="full-2"/>
<icon BUILTIN="licq"/>
</node>
<node CREATED="1585035117878" ID="ID_1287089352" MODIFIED="1585035504255">
<richcontent TYPE="NODE"><html>
  <head>
    
  </head>
  <body>
    <img src="example-addition-list-1.png" />
  </body>
</html>
</richcontent>
<font ITALIC="true" NAME="SansSerif" SIZE="12"/>
<icon BUILTIN="full-3"/>
<icon BUILTIN="licq"/>
</node>
</node>
</node>
</node>
</node>
</node>
<node CREATED="1585035588256" ID="ID_167672866" MODIFIED="1585035593149" TEXT="The Reader">
<node CREATED="1585039108983" ID="ID_449577513" MODIFIED="1585039163845" TEXT="Convert textual source code to data structure"/>
<node CREATED="1585039173513" ID="ID_1546774777" MODIFIED="1585039175593" TEXT="Reading">
<node CREATED="1585039213621" FOLDED="true" ID="ID_1462621089" MODIFIED="1585039874576" TEXT="Reader form">
<node CREATED="1585039216125" ID="ID_1852400646" MODIFIED="1585039221041" TEXT="Textual represenation"/>
<node CREATED="1585039221396" ID="ID_240509370" MODIFIED="1585039228759" TEXT="... of Clojure data structure"/>
</node>
<node CREATED="1585039244499" FOLDED="true" ID="ID_220585571" MODIFIED="1585039874578" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node CREATED="1585039660856" ID="ID_1970968821" MODIFIED="1585039662441" TEXT="Forms">
<node CREATED="1585039245966" ID="ID_214436542" MODIFIED="1585039249249" TEXT="(str &quot;To understand what recursion is,&quot; &quot; you must first understand recursion.&quot;)"/>
<node CREATED="1585039256817" ID="ID_552783890" MODIFIED="1585039259634" TEXT="Three forms">
<node CREATED="1585039259829" ID="ID_470030428" MODIFIED="1585039267118" TEXT="str symbol"/>
<node CREATED="1585039267513" ID="ID_1525471046" MODIFIED="1585039271979" TEXT="2 strings"/>
</node>
</node>
<node CREATED="1585039782851" ID="ID_1720165070" MODIFIED="1585039784634" TEXT="Simple forms">
<node CREATED="1585039677990" ID="ID_1988383921" MODIFIED="1585039680141" TEXT="()">
<node CREATED="1585039680379" ID="ID_1360740644" MODIFIED="1585039682805" TEXT="List reader form"/>
</node>
<node CREATED="1585039683438" ID="ID_1099199779" MODIFIED="1585039686349" TEXT="str">
<node CREATED="1585039686533" ID="ID_911862649" MODIFIED="1585039689635" TEXT="Symbol reader form"/>
</node>
<node CREATED="1585039692029" ID="ID_1094315463" MODIFIED="1585039695305" TEXT="[1 2]">
<node CREATED="1585039698421" ID="ID_620162425" MODIFIED="1585039703889" TEXT="Vector reader form"/>
<node CREATED="1585039704235" ID="ID_1308716879" MODIFIED="1585039709563" TEXT="... containing"/>
<node CREATED="1585039709926" ID="ID_335903214" MODIFIED="1585039715893" TEXT="... two numbers reader forms"/>
</node>
<node CREATED="1585039719955" ID="ID_472546447" MODIFIED="1585039734253" TEXT="{:sound &quot;hoot&quot;}">
<node CREATED="1585039740556" ID="ID_662704083" MODIFIED="1585039742848" TEXT="Map reader form"/>
<node CREATED="1585039743236" ID="ID_606589201" MODIFIED="1585039750627" TEXT="... with keyword reader form"/>
<node CREATED="1585039746541" ID="ID_319565456" MODIFIED="1585039759058" TEXT="... and string reader form"/>
</node>
</node>
</node>
<node CREATED="1585039369934" FOLDED="true" ID="ID_1075644933" MODIFIED="1585039874578" TEXT="REPL">
<node CREATED="1585039371855" ID="ID_1381779729" MODIFIED="1585039372400" TEXT="read-eval-print-loop"/>
</node>
<node CREATED="1585039385369" ID="ID_1752435063" MODIFIED="1585039402788" TEXT="Read can be performed independently"/>
<node CREATED="1585039403761" ID="ID_675604388" MODIFIED="1585039408174" TEXT="... than evaluation"/>
</node>
<node CREATED="1585039868468" ID="ID_1501944588" MODIFIED="1585039922952" TEXT="Reader macros">
<node CREATED="1585039883819" ID="ID_160440736" MODIFIED="1585039889032" TEXT="Example">
<icon BUILTIN="wizard"/>
<node CREATED="1585039896381" ID="ID_1929603698" MODIFIED="1585039900243" TEXT="Transforming">
<node CREATED="1585039900433" ID="ID_294156777" MODIFIED="1585039901131" TEXT="#(+ 1 %)"/>
<node CREATED="1585039901718" ID="ID_369288659" MODIFIED="1585039902904" TEXT="... to">
<node CREATED="1585039903365" ID="ID_989867901" MODIFIED="1585039912043" TEXT="(fn* [p1__423#] (+ 1 p1__423#))"/>
</node>
</node>
</node>
<node CREATED="1585039985410" ID="ID_479049611" MODIFIED="1585039996624" TEXT="Different from &quot;macros&quot;"/>
<node CREATED="1585040001891" ID="ID_1751582011" MODIFIED="1585040009557" TEXT="Set of roles"/>
<node CREATED="1585040010080" ID="ID_1888998296" MODIFIED="1585040014614" TEXT="... transforming text"/>
<node CREATED="1585040015016" ID="ID_298323425" MODIFIED="1585040018422" TEXT="... into data structures"/>
<node CREATED="1585040060618" ID="ID_759283102" MODIFIED="1585040065530" TEXT="Example">
<icon BUILTIN="wizard"/>
<node CREATED="1585040069412" ID="ID_678815330" MODIFIED="1585040070253" TEXT="(read-string &quot;&apos;(a b c)&quot;)">
<node CREATED="1585040077120" ID="ID_345981551" MODIFIED="1585040077872" TEXT="(quote (a b c))"/>
</node>
<node CREATED="1585040071008" ID="ID_991647094" MODIFIED="1585040083201" TEXT="(read-string &quot;@var&quot;)">
<node CREATED="1585040087256" ID="ID_467503223" MODIFIED="1585040087794" TEXT="(clojure.core/deref var)"/>
</node>
</node>
<node CREATED="1585040104378" ID="ID_1915913267" MODIFIED="1585040122668" TEXT="Can ignore text too">
<richcontent TYPE="NOTE"><html>
  <head>
    
  </head>
  <body>
    <pre http-equiv="content-type" content="text/html; charset=utf-8" class="pygments highlight"><code data-lang="clojure" class="block">(read-string &quot;; ignore!\n(+ 1 2)&quot;)
; =&gt; (+ 1 2)</code></pre>
    <p>
      llkj
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node CREATED="1585040122836" ID="ID_1631587886" MODIFIED="1585040127060" TEXT="The Evaluator">
<node CREATED="1585040149636" FOLDED="true" ID="ID_271999301" MODIFIED="1585045355373" TEXT="You can think of it like">
<node CREATED="1585040143164" ID="ID_1019034373" MODIFIED="1585040162677" TEXT="Take data structure as argument">
<icon BUILTIN="full-1"/>
</node>
<node CREATED="1585040176990" ID="ID_569372629" MODIFIED="1585040185792" TEXT="Process the data structure">
<icon BUILTIN="full-2"/>
<node CREATED="1585040194343" ID="ID_1956182413" MODIFIED="1585040222672" TEXT="depending of rules of"/>
<node CREATED="1585040209065" ID="ID_838813117" MODIFIED="1585040209978" TEXT="... data structure type"/>
</node>
<node CREATED="1585040230105" ID="ID_1081104306" MODIFIED="1585040234665" TEXT="Return the result">
<icon BUILTIN="full-3"/>
</node>
</node>
<node CREATED="1585040310614" FOLDED="true" ID="ID_67499444" MODIFIED="1585045355374" TEXT="These Things Evaluate to Themselves">
<node CREATED="1585040323509" ID="ID_1056962393" MODIFIED="1585040329249" TEXT="Not a list or symbole">
<node CREATED="1585040336545" ID="ID_935341589" MODIFIED="1585040341559" TEXT="Result is data structure itself"/>
<node CREATED="1585040341939" ID="ID_808889712" MODIFIED="1585040367973" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node CREATED="1585040343468" ID="ID_214354218" MODIFIED="1585040350809" TEXT="true"/>
<node CREATED="1585040351348" ID="ID_554715566" MODIFIED="1585040352136" TEXT="false"/>
<node CREATED="1585040353954" ID="ID_260070759" MODIFIED="1585040355513" TEXT="{}"/>
<node CREATED="1585040356221" ID="ID_1102807241" MODIFIED="1585040361695" TEXT=":huzzah"/>
<node CREATED="1585040375393" ID="ID_992322965" MODIFIED="1585040381088" TEXT="()"/>
</node>
</node>
</node>
<node CREATED="1585040392562" FOLDED="true" ID="ID_1851827206" MODIFIED="1585045355376" TEXT="Symbols">
<node CREATED="1585042106850" ID="ID_1803537735" MODIFIED="1585042112715" TEXT="Fundamental task as programmer">
<node CREATED="1585042112960" ID="ID_356515451" MODIFIED="1585042121008" TEXT="Create abstraction"/>
<node CREATED="1585042121418" ID="ID_893363576" MODIFIED="1585042124942" TEXT="... by associating names"/>
<node CREATED="1585042125314" ID="ID_479099579" MODIFIED="1585042127027" TEXT="... with value"/>
</node>
<node CREATED="1585042146268" ID="ID_611448071" MODIFIED="1585042150419" TEXT="Symbol used to name">
<node CREATED="1585042156401" ID="ID_266268191" MODIFIED="1585042160680" TEXT="Functions"/>
<node CREATED="1585042161028" ID="ID_1655154895" MODIFIED="1585042163207" TEXT="Macros"/>
<node CREATED="1585042163578" ID="ID_41074240" MODIFIED="1585042164470" TEXT="Data"/>
<node CREATED="1585042164993" ID="ID_527858524" MODIFIED="1585042167525" TEXT="... anything you can use"/>
</node>
<node CREATED="1585042183267" ID="ID_823043208" MODIFIED="1585042193165" TEXT="Evaluate symbols by resolving them">
<node CREATED="1585042208786" ID="ID_629057926" MODIFIED="1585042212640" TEXT="using namespace mapping"/>
<node CREATED="1585042220231" ID="ID_1505857996" MODIFIED="1585042230419" TEXT="Symbol resolve either to">
<node CREATED="1585042224251" ID="ID_599112500" MODIFIED="1585042235166" TEXT="Value"/>
<node CREATED="1585042235504" ID="ID_1060880527" MODIFIED="1585042237028" TEXT="Special form"/>
</node>
</node>
<node CREATED="1585042275061" ID="ID_185311379" MODIFIED="1585044856713" TEXT="Symbol resolution in order">
<node CREATED="1585042286884" ID="ID_1569355138" MODIFIED="1585042333365" TEXT="If symbol names special form">
<icon BUILTIN="full-1"/>
<node CREATED="1585042244195" ID="ID_512531181" MODIFIED="1585042247628" TEXT="Build in operator"/>
<node CREATED="1585042252749" ID="ID_1604522950" MODIFIED="1585042257183" TEXT="Provide fundamental behavior"/>
<node CREATED="1585042362618" ID="ID_1852475431" MODIFIED="1585042370612" TEXT="Always first element in a list"/>
<node CREATED="1585042370950" ID="ID_1382299350" MODIFIED="1585042375882" TEXT="Always used in context of operation"/>
<node CREATED="1585042376218" ID="ID_670220254" MODIFIED="1585042380944" TEXT="Example">
<icon BUILTIN="wizard"/>
<node CREATED="1585042381283" ID="ID_1491711195" MODIFIED="1585042382858" TEXT="If"/>
</node>
</node>
<node CREATED="1585042300039" ID="ID_224979542" MODIFIED="1585042334362" TEXT="If symbol is a local binding">
<icon BUILTIN="full-2"/>
<node CREATED="1585042418041" ID="ID_606777990" MODIFIED="1585042422726" TEXT="Association between symbol"/>
<node CREATED="1585042423064" ID="ID_1654387223" MODIFIED="1585042424404" TEXT="... and value"/>
<node CREATED="1585042424831" ID="ID_491049118" MODIFIED="1585042429755" TEXT="... not created by &quot;def&quot;"/>
</node>
<node CREATED="1585042309925" ID="ID_51081536" MODIFIED="1585042335222" TEXT="If namespace mapping using &quot;def&quot;">
<icon BUILTIN="full-3"/>
</node>
<node CREATED="1585042328373" ID="ID_571468357" MODIFIED="1585042336381" TEXT="Throw an exception">
<icon BUILTIN="full-4"/>
</node>
</node>
</node>
<node CREATED="1585044860429" ID="ID_619999924" MODIFIED="1585045359398" TEXT="Lists">
<node CREATED="1585044874918" ID="ID_1362140582" MODIFIED="1585044880668" TEXT="If empty list, evaluate to empty list"/>
<node CREATED="1585044881072" ID="ID_13182291" MODIFIED="1585044900647" TEXT="... otherwise, evaluated as a call to first element"/>
<node CREATED="1585045106684" ID="ID_897718804" MODIFIED="1585045394443" TEXT="Call depends on first element of the list"/>
<node CREATED="1585045111592" ID="ID_1617793674" MODIFIED="1585045178701" TEXT="Function Calls">
<node CREATED="1585045124660" ID="ID_1769843771" MODIFIED="1585045138307" TEXT="Each operand evaluated">
<icon BUILTIN="full-1"/>
</node>
<node CREATED="1585045128429" ID="ID_895610729" MODIFIED="1585045139206" TEXT="Passed to function as arguments">
<icon BUILTIN="full-2"/>
</node>
</node>
<node CREATED="1585045172818" ID="ID_1424776402" MODIFIED="1585045175819" TEXT="Special Forms">
<node CREATED="1585045199624" ID="ID_473757672" MODIFIED="1585045207684" TEXT="Not same evaluating rules as normal function"/>
<node CREATED="1585045218505" ID="ID_1209896980" MODIFIED="1585045309849" TEXT="Examples">
<icon BUILTIN="wizard"/>
<node CREATED="1585045219868" ID="ID_1812711062" MODIFIED="1585045220757" TEXT="if">
<node CREATED="1585045220937" ID="ID_753241140" MODIFIED="1585045224620" TEXT="Not all operand evaluated"/>
<node CREATED="1585045239937" ID="ID_1300809512" MODIFIED="1585045247486" TEXT="... depending of condition true or false"/>
</node>
<node CREATED="1585045284831" ID="ID_1415357848" MODIFIED="1585045285930" TEXT="quote"/>
<node CREATED="1585045286350" ID="ID_1631909301" MODIFIED="1585045287069" TEXT="def"/>
<node CREATED="1585045287497" ID="ID_1089002330" MODIFIED="1585045291223" TEXT="let"/>
<node CREATED="1585045291776" ID="ID_1593380747" MODIFIED="1585045292750" TEXT="loop"/>
<node CREATED="1585045295629" ID="ID_1554116201" MODIFIED="1585045296486" TEXT="fn"/>
<node CREATED="1585045297107" ID="ID_442038837" MODIFIED="1585045297788" TEXT="do"/>
<node CREATED="1585045299791" ID="ID_1754013259" MODIFIED="1585045300754" TEXT="recur"/>
</node>
</node>
</node>
<node CREATED="1585045333711" ID="ID_748505449" MODIFIED="1585045335302" TEXT="Macros"/>
</node>
</node>
</node>
</map>
